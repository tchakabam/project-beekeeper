{"version":3,"sources":["webpack://BeekeeprUniversalEngineNode/webpack/universalModuleDefinition","webpack://BeekeeprUniversalEngineNode/webpack/bootstrap","webpack://BeekeeprUniversalEngineNode/./ext-mod/emliri-es-libs/objec-ts/lib/es6-set.ts","webpack://BeekeeprUniversalEngineNode/./ext-mod/emliri-es-libs/rialto/lib/adaptive-media-client.ts","webpack://BeekeeprUniversalEngineNode/./ext-mod/emliri-es-libs/rialto/lib/adaptive-media.ts","webpack://BeekeeprUniversalEngineNode/./ext-mod/emliri-es-libs/rialto/lib/bytes-read-write.ts","webpack://BeekeeprUniversalEngineNode/./ext-mod/emliri-es-libs/rialto/lib/cloneable.ts","webpack://BeekeeprUniversalEngineNode/./ext-mod/emliri-es-libs/rialto/lib/hls-m3u8.ts","webpack://BeekeeprUniversalEngineNode/./ext-mod/emliri-es-libs/rialto/lib/logger.ts","webpack://BeekeeprUniversalEngineNode/./ext-mod/emliri-es-libs/rialto/lib/media-container-info.ts","webpack://BeekeeprUniversalEngineNode/./ext-mod/emliri-es-libs/rialto/lib/media-locator.ts","webpack://BeekeeprUniversalEngineNode/./ext-mod/emliri-es-libs/rialto/lib/media-segment.ts","webpack://BeekeeprUniversalEngineNode/./ext-mod/emliri-es-libs/rialto/lib/queue.ts","webpack://BeekeeprUniversalEngineNode/./ext-mod/emliri-es-libs/rialto/lib/resource-request.ts","webpack://BeekeeprUniversalEngineNode/./ext-mod/emliri-es-libs/rialto/lib/resource.ts","webpack://BeekeeprUniversalEngineNode/./ext-mod/emliri-es-libs/rialto/lib/time-intervals.ts","webpack://BeekeeprUniversalEngineNode/./ext-mod/emliri-es-libs/rialto/lib/time-scale.ts","webpack://BeekeeprUniversalEngineNode/./ext-mod/emliri-es-libs/rialto/lib/url.ts","webpack://BeekeeprUniversalEngineNode/./ext-mod/emliri-es-libs/rialto/lib/xhr.ts","webpack://BeekeeprUniversalEngineNode/./ext-mod/node-http-xhr/lib/index.js","webpack://BeekeeprUniversalEngineNode/./ext-mod/node-http-xhr/lib/node-event-target.js","webpack://BeekeeprUniversalEngineNode/./ext-mod/node-http-xhr/lib/node-xhr-event-target.js","webpack://BeekeeprUniversalEngineNode/./lib/core/bandwidth-estimator.ts","webpack://BeekeeprUniversalEngineNode/./lib/core/bk-access-proxy.ts","webpack://BeekeeprUniversalEngineNode/./lib/core/bk-resource-request.ts","webpack://BeekeeprUniversalEngineNode/./lib/core/bk-resource-tx-monitor.ts","webpack://BeekeeprUniversalEngineNode/./lib/core/bk-resource.ts","webpack://BeekeeprUniversalEngineNode/./lib/core/bk-swarm-id.ts","webpack://BeekeeprUniversalEngineNode/./lib/core/detect-safari-11.ts","webpack://BeekeeprUniversalEngineNode/./lib/core/http-download-queue.ts","webpack://BeekeeprUniversalEngineNode/./lib/core/index.ts","webpack://BeekeeprUniversalEngineNode/./lib/core/network-channel-emulator.ts","webpack://BeekeeprUniversalEngineNode/./lib/core/peer-agent.ts","webpack://BeekeeprUniversalEngineNode/./lib/core/peer-transport.ts","webpack://BeekeeprUniversalEngineNode/./lib/core/peer.ts","webpack://BeekeeprUniversalEngineNode/./lib/core/perf-now.ts","webpack://BeekeeprUniversalEngineNode/./lib/core/stringly-typed-event-emitter.ts","webpack://BeekeeprUniversalEngineNode/./lib/universal-engine/engine.ts","webpack://BeekeeprUniversalEngineNode/./lib/universal-engine/hls-access-proxy.ts","webpack://BeekeeprUniversalEngineNode/./lib/universal-engine/index.ts","webpack://BeekeeprUniversalEngineNode/./lib/universal-engine/virtual-playhead.ts","webpack://BeekeeprUniversalEngineNode/external \"bittorrent-tracker\"","webpack://BeekeeprUniversalEngineNode/external \"crypto\"","webpack://BeekeeprUniversalEngineNode/external \"debug\"","webpack://BeekeeprUniversalEngineNode/external \"domify\"","webpack://BeekeeprUniversalEngineNode/external \"es6-set/polyfill\"","webpack://BeekeeprUniversalEngineNode/external \"eventemitter3\"","webpack://BeekeeprUniversalEngineNode/external \"events\"","webpack://BeekeeprUniversalEngineNode/external \"get-browser-rtc\"","webpack://BeekeeprUniversalEngineNode/external \"html-tag\"","webpack://BeekeeprUniversalEngineNode/external \"http\"","webpack://BeekeeprUniversalEngineNode/external \"https\"","webpack://BeekeeprUniversalEngineNode/external \"m3u8-parser\"","webpack://BeekeeprUniversalEngineNode/external \"simple-peer\"","webpack://BeekeeprUniversalEngineNode/external \"url\"","webpack://BeekeeprUniversalEngineNode/external \"url-toolkit\"","webpack://BeekeeprUniversalEngineNode/external \"uuid/v4\""],"names":[],"mappings":"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AAG;;;;;;;;;;;;;ACnGhB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,WAAW,WAAW;AACtB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,qCAAqC,yBAAyB;AAC9D,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,kCAAkC,8BAA8B,EAAE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,wBAAwB,2BAA2B,EAAE;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,2CAA2C;AAC3C;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA,KAAK;;AAEL;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;AChkBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AClHA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,2BAA2B;AAC3B,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,wBAAwB,EAAE;AAC1D;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;;;;;;;;;;;;;;AC5GA;;;;;;;;;;;;;;GAcG;;AAEH,IAAM,kBAAkB,GAAG,CAAC,GAAG,IAAI,CAAC;AACpC,IAAM,gBAAgB,GAAG,EAAE,GAAG,IAAI,CAAC;AAEnC;IACI,wBAAsB,KAAa,EAAW,SAAiB;QAAzC,UAAK,GAAL,KAAK,CAAQ;QAAW,cAAS,GAAT,SAAS,CAAQ;IAAG,CAAC;IACvE,qBAAC;AAAD,CAAC;AAED;IAAA;QACY,cAAS,GAAqB,EAAE,CAAC;QACjC,oBAAe,GAAG,CAAC,CAAC;QACpB,cAAS,GAAqB,EAAE,CAAC;IA4B7C,CAAC;IA1BU,qCAAQ,GAAf,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","file":"BeekeeprUniversalEngineNode.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"BeekeeprUniversalEngineNode\"] = factory();\n\telse\n\t\troot[\"BeekeeprUniversalEngineNode\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/build/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/universal-engine/index.ts\");\n","const Set: SetConstructor = require('es6-set/polyfill');\n\nexport {Set};\n","import { AdaptiveMedia, AdaptiveMediaSet } from \"./adaptive-media\";\nimport { MediaSegment } from \"./media-segment\";\nimport { TimeIntervalContainer, TimeInterval } from './time-intervals';\n//import { Scheduler } from \"../../objec-ts/lib/scheduler\";\nimport { getLogger } from \"./logger\";\n\nconst { log, error } = getLogger(\"adaptive-media-client\");\n\nexport abstract class AdaptiveMediaClient implements AdaptiveMediaEngine {\n\n  private mediaEl: HTMLMediaElement;\n\n  constructor(mediaElement: HTMLMediaElement) {\n    this.mediaEl = mediaElement;\n  }\n\n  get mediaElement(): HTMLMediaElement {\n    return this.mediaEl;\n  }\n\n  protected setMediaSource(source: MediaSource) {\n    this.mediaEl.src = URL.createObjectURL(source);\n  }\n\n  abstract setSourceURL(url: string, mimeType?: string);\n  abstract activateMediaStream(stream: AdaptiveMedia): Promise<boolean>\n  abstract enableMediaSet(set: AdaptiveMediaSet);\n}\n\nexport interface AdaptiveMediaEngine {\n  enableMediaSet(set: AdaptiveMediaSet)\n  activateMediaStream(stream: AdaptiveMedia): Promise<boolean>\n}\n\nexport class AdaptiveMediaStreamConsumer {\n\n  private _fetchTargetRanges: TimeIntervalContainer = new TimeIntervalContainer();\n  private _bufferedRanges: TimeIntervalContainer = new TimeIntervalContainer();\n\n  constructor(\n    private _adaptiveMedia: AdaptiveMedia,\n    private _onSegmentBufferedCb: (segment: MediaSegment) => void) {\n  }\n\n  getMedia(): AdaptiveMedia {\n    return this._adaptiveMedia;\n  }\n\n  getBufferedRanges(): TimeIntervalContainer {\n    return this._bufferedRanges;\n  }\n\n  getFetchTargetRanges(): TimeIntervalContainer {\n    return this._fetchTargetRanges;\n  }\n\n  setFetchTarget(time: number) {\n    this.setFetchTargetRange(new TimeInterval(0, time));\n  }\n\n  /**\n   *\n   * @param floor when passed negative number, floor is calculated from end of media (useful for live/DVR window)\n   * @param ceiling\n   */\n  setFetchFloorCeiling(floor: number = 0, ceiling: number = Infinity) {\n\n    if (floor === 0) {\n      floor = this._adaptiveMedia.getEarliestTimestamp();\n    } else if (floor < 0) {\n      floor = Math.max(this._adaptiveMedia.getWindowDuration() - Math.abs(floor), 0);\n    }\n\n    if (ceiling === Infinity) {\n      ceiling = this._adaptiveMedia.getWindowDuration(); // when to use cummulated duration?\n    }\n\n    this.setFetchTargetRange(new TimeInterval(floor, ceiling));\n  }\n\n  /**\n   *\n   * @param range pass `null` to just reset to clear range container\n   */\n  setFetchTargetRange(range: TimeInterval) {\n    this._fetchTargetRanges.clear();\n    if (range) {\n      this.addFetchTargetRange(range);\n    }\n  }\n\n  addFetchTargetRange(range: TimeInterval) {\n    this._fetchTargetRanges.add(range);\n    this._fetchTargetRanges = this._fetchTargetRanges.flatten();\n    this._onFetchTargetRangeChanged();\n  }\n\n  private _onFetchTargetRangeChanged() {\n    const mediaSeekableRange: TimeIntervalContainer = this._adaptiveMedia.getSeekableTimeRanges();\n    const fetchTargetRanges = this.getFetchTargetRanges();\n\n    log('fetch-target ranges window duration:', fetchTargetRanges.getWindowDuration())\n\n    if (!mediaSeekableRange.hasOverlappingRangesWith(fetchTargetRanges)) {\n      error('fetch target range does not overlap with media seekable range');\n      return;\n    }\n\n    this._fetchAllSegmentsInTargetRange();\n  }\n\n  private _fetchAllSegmentsInTargetRange() {\n\n    log('trying to retrieve data for fetch-range');\n\n    const fetchTargetRanges = this.getFetchTargetRanges();\n    fetchTargetRanges.ranges.forEach((range) => {\n      const mediaSegments: MediaSegment[] = this._adaptiveMedia.findSegmentsForTimeRange(range, true);\n\n      mediaSegments.forEach((segment) => {\n        if (segment.isFetching || segment.hasData) {\n          return;\n        }\n\n        if (!segment.hasCustomRequestMaker()) {\n          throw new Error('Assertion failed: media segment should have custom request-maker');\n        }\n\n        log('going to request segment resource:', segment.getOrdinalIndex(), segment.getUrl())\n\n        segment.fetch().then(() => {\n\n          const segmentInterval = segment.getTimeInterval();\n\n          log('adding time-interval to buffered range:', segmentInterval)\n\n          this._bufferedRanges.add(segmentInterval).flatten(true);\n\n          if (this._onSegmentBufferedCb) {\n            this._onSegmentBufferedCb(segment);\n          }\n        })\n      });\n    });\n  }\n\n}\n\n\n","import { CloneableScaffold } from \"./cloneable\";\n\nimport {Set} from \"../../objec-ts/lib/es6-set\";\n\nimport {MediaSegment} from './media-segment'\n\nimport {\n  VideoInfo,\n  AudioInfo,\n  TextInfo,\n  MediaTypeFlag,\n  MediaContainer,\n  MediaContainerInfo,\n  MediaTypeSet\n} from './media-container-info'\n\nimport { ByteRange } from './byte-range';\nimport { AdaptiveMediaEngine } from './adaptive-media-client';\nimport { MediaClockTime } from \"./media-locator\";\nimport { TimeIntervalContainer, TimeInterval } from \"./time-intervals\";\nimport { getLogger } from \"./logger\";\n\nconst { log, error, warn } = getLogger(\"adaptive-media-client\");\n\n/**\n * Essentially, a sequence of media segments that can be consumed as a stream.\n *\n * Represents what people refer to as rendition, quality level or representation, or media \"variant\" playlist.\n *\n * Contains an array of segments and the metadata in common about these.\n */\nexport class AdaptiveMedia extends CloneableScaffold<AdaptiveMedia> {\n\n  private _segments: MediaSegment[] = [];\n  private _timeRanges: TimeIntervalContainer = new TimeIntervalContainer();\n  private _lastRefreshAt: number = 0;\n  private _lastTimeRangesCreatedAt: number = 0;\n  private _updateTimer: number;\n\n  constructor(public mediaEngine: AdaptiveMediaEngine = null) {\n    super();\n  }\n\n  parent: AdaptiveMediaSet\n\n  mimeType: string\n  codecs: string\n  bandwidth: number\n  videoInfo: VideoInfo\n  audioInfo: AudioInfo\n  textInfo: TextInfo\n\n  isLive: boolean = false;\n\n  /**\n   * Some label indentifying the logical function for the user this media selection has. HLS uses `NAME`, DASH has `role(s)`.\n   *\n   * This SHOULD be identical for redundant selections/streams (carrying the same content but in different sets to allow\n   * backup / fallback strategies).\n   *\n   * It SHOULD be different for streams with different function or \"role\" (as in DASH spec).\n   *\n   * Examples: Original-Audio vs Director-Comments or English-Subtitles vs Forced-CC etc.\n   */\n  label: string;\n\n  /**\n   * If the media segments come in a packetized format, indicate the ID within\n   * the package stream that specifies the payload stream described here.\n   */\n  packageStreamId: number;\n\n  /**\n   * Uri/ByteRange of segment index i.e where to enrich our segment list\n   */\n  segmentIndexUri: string;\n  segmentIndexRange: ByteRange;\n  segmentIndexProvider: () => Promise<MediaSegment[]> = null;\n\n  /**\n   * If this is an alternate rendition media for example in HLS the group-ID,\n   * it is what may be used to group various media together into a set\n   * which is supposed to be rendered into coherent content\n   * (eg various audio/text stream options timed against a video stream).\n   */\n  externalReferenceId: string;\n\n  /**\n   * Like sequence-no in HLS, or DASH template index\n   */\n  externalIndex: number;\n\n  /**\n   * tamper-safe copy of internal data\n   */\n  get segments(): MediaSegment[] {\n    return this._segments.slice(0);\n  }\n\n  get lastRefreshedAt(): number {\n    return this._lastRefreshAt;\n  }\n\n  addSegment(mediaSegment: MediaSegment, reorderAndDedupe: boolean = true) {\n    if (reorderAndDedupe) {\n      this._updateSegments([mediaSegment]);\n    } else {\n      this._segments.push(mediaSegment);\n    }\n  }\n\n  getUrl(): string {\n    return this.segmentIndexUri || null;\n  }\n\n  getEarliestTimestamp(): MediaClockTime {\n    if (!this._segments.length) {\n      return NaN;\n    }\n    return this._segments[0].startTime;\n  }\n\n  getMeanSegmentDuration(): number {\n    return this._segments.reduce((accu, segment) => {\n      return accu + segment.duration;\n    }, 0) / this._segments.length;\n  }\n\n  /**\n   * @returns duration as sum of all segment durations. will be equal to window duration\n   * if the media is gapless and has no time-plane discontinuities.\n   */\n  getCumulatedDuration(): MediaClockTime {\n    return this.getSeekableTimeRanges().getCumulatedDuration();\n  }\n\n  /**\n   * @returns duration as difference between last segment endTime and first segment startTime\n   */\n  getWindowDuration(): MediaClockTime {\n    return this.getSeekableTimeRanges().getWindowDuration();\n  }\n\n  /**\n   * Refresh/enrich media segments (e.g for external segment indices and for live)\n   */\n  refresh(autoReschedule: boolean = false,\n    onSegmentsUpdate: () => void = null): Promise<AdaptiveMedia> {\n    if (!this.segmentIndexProvider) {\n      return Promise.reject(\"No segment index provider set\");\n    }\n    this._lastRefreshAt = Date.now();\n\n    const doAutoReschedule = () => {\n      this.scheduleUpdate(this.getMeanSegmentDuration(), () => {\n        if (onSegmentsUpdate) {\n          onSegmentsUpdate();\n        }\n        doAutoReschedule();\n      })\n    }\n\n    log('going to refresh media index:', this.getUrl());\n\n    return this.segmentIndexProvider()\n      .then((newSegments) => {\n\n        // update segment-list models\n        this._updateSegments(newSegments);\n\n        if (onSegmentsUpdate) {\n          onSegmentsUpdate();\n        }\n\n        // we only call this once we have new segments so\n        // we can actually calculate average segment duration.\n        // when autoReschedule is true, this would be called once on the initial call to refresh\n        // while scheduleUpdate doesn't set to true the autoReschedule flag\n        // when it calls refresh.\n        // rescheduling happens as we call reschedule() via the reentrant closure in the callback here.\n        if (autoReschedule) {\n          doAutoReschedule();\n        }\n\n        return this;\n      });\n  }\n\n  scheduleUpdate(timeSeconds: number, onRefresh: () => void = null) {\n    if (!Number.isFinite(timeSeconds)) {\n      warn('attempt to schedule media update with invalid time-value:', timeSeconds)\n      return;\n    }\n    log('scheduling update of adaptive media index in:', timeSeconds);\n    window.clearTimeout(this._updateTimer);\n    this._updateTimer = window.setTimeout(() => {\n      this.refresh().then((result: AdaptiveMedia) => {\n        if (onRefresh) {\n          onRefresh();\n        }\n      })\n    }, timeSeconds * 1000);\n  }\n\n  /**\n   * Activates/enables this media with the attached engine\n   */\n  activate(): Promise<boolean> {\n    if (this.mediaEngine) {\n      return this.mediaEngine.activateMediaStream(this)\n    }\n    return Promise.reject(false);\n  }\n\n  getSeekableTimeRanges(): TimeIntervalContainer {\n    if (this._lastRefreshAt > this._lastTimeRangesCreatedAt) {\n      this._updateTimeRanges();\n    }\n    return this._timeRanges;\n  }\n\n  /**\n   *\n   * @param range\n   * @param partial\n   * @returns segments array which are fully contained inside `range` (or only overlap when `partial` is true)\n   */\n  findSegmentsForTimeRange(range: TimeInterval, partial: boolean = false): MediaSegment[] {\n    if (!partial) {\n      return this._segments.filter((segment) => range.contains(segment.getTimeInterval()));\n    } else {\n      return this._segments.filter((segment) => range.overlapsWith(segment.getTimeInterval()));\n    }\n  }\n\n  private _updateTimeRanges() {\n    this._timeRanges = new TimeIntervalContainer();\n    this._segments.forEach((segment) => {\n      this._timeRanges.add(new TimeInterval(segment.startTime, segment.endTime));\n    });\n    this._lastTimeRangesCreatedAt = Date.now();\n  }\n\n  private _updateSegments(newSegments: MediaSegment[]) {\n\n    log('starting update of media segment - got new segments list of size:', newSegments.length)\n\n    // pre-deduplicate new segments by ordinal-index\n    // this is to make sure we are not throwing out any already existing\n    // resources here which may have ongoing request state for example.\n    newSegments = newSegments.filter((segment) => {\n      return this._segments.findIndex((s) => {\n        if (!Number.isFinite(segment.getOrdinalIndex())) {\n          return false;\n        }\n        return s.getOrdinalIndex() === segment.getOrdinalIndex();\n      }) < 0;  // true when we didn't find any segment with that ordinal index yet\n              // which means we should let it pass the filter function to be added\n    });\n\n    if (newSegments.length === 0) {\n      log('no new segments found');\n      return;\n    }\n\n    Array.prototype.push.apply(this._segments, newSegments);\n\n    log('new deduplicated list size is:', this._segments.length)\n\n    if (this._segments.length === 0) {\n      return;\n    }\n\n    let startedAt: number = Date.now()\n\n    let lastOrdinalIdx: number = -1;\n    let lastSegmentEndTime: number = -1;\n\n    log('first/last ordinal index is:',\n      newSegments[0].getOrdinalIndex(),\n      newSegments[newSegments.length -1].getOrdinalIndex())\n\n    const segments: MediaSegment[] = [];\n\n    // sort by ordinal index\n    this._segments.sort((a, b) => {\n      const diff = a.getOrdinalIndex() - b.getOrdinalIndex();\n      if (Number.isFinite(diff)) {\n        return diff;\n      }\n      return 0;\n    }).forEach((segment) => { // extract segments in ordinal index order and deduplicate them\n\n      const index = segment.getOrdinalIndex();\n\n      // remove redundant indices\n      // if it's NaN we don't care about this (it means there are no indices)\n      if (Number.isFinite(index)\n        && index === lastOrdinalIdx) { // deduplicate\n        return;\n      }\n\n      // TODO: handle discontinuity-markers in segments\n\n      // apply offset to model continuous timeline\n      if (segment.startTime < lastSegmentEndTime) {\n        const offset = lastSegmentEndTime - segment.startTime;\n        //debug('applying offset to segment to achieve timeplane continuity:', index, offset);\n        segment.setTimeOffset(offset);\n      }\n\n      if (lastOrdinalIdx !== -1 // initial case\n        && index !== lastOrdinalIdx + 1) {\n        warn(\"ordinal indices should grow monitonically but diff is:\", index - lastOrdinalIdx);\n      }\n\n      lastOrdinalIdx = index;\n      lastSegmentEndTime = segment.endTime;\n\n      segments.push(segment);\n    })\n\n    this._segments = segments;\n\n    log('updated and reorder/deduped media segment list, new length is:', segments.length)\n\n    log('first/last ordinal index is:',\n      segments[0].getOrdinalIndex(), segments[segments.length -1].getOrdinalIndex())\n\n    log('new cummulated/window duration is:', this.getCumulatedDuration(), '/', this.getWindowDuration())\n\n    log('updating segments done, processing took millis:', Date.now() - startedAt);\n  }\n\n}\n\n/**\n * A set of segmented adaptive media stream representations with a given combination of content-types (see flags).\n *\n * This might be a valid playable combination of tracks (of which some might be optional).\n */\nexport class AdaptiveMediaSet extends Set<AdaptiveMedia> implements MediaContainer {\n  parent: AdaptiveMediaPeriod\n  mediaContainerInfo: MediaContainerInfo = new MediaContainerInfo()\n\n  /**\n   * @returns The default media if advertised,\n   * or falls back on first media representation of the first set\n   */\n  getDefaultMedia(): AdaptiveMedia {\n    return Array.from(this.values())[0];\n  }\n}\n\n/**\n * A queriable collection of adaptive media sets. For example, each set might be an adaptation state.\n */\nexport class AdaptiveMediaPeriod {\n\n  sets: AdaptiveMediaSet[] = [];\n\n  /**\n   * @returns The default adaptive-media-set if advertised,\n   * or falls back on first media representation of the first set\n   */\n  getDefaultSet(): AdaptiveMediaSet {\n    if (this.sets[0].size === 0) {\n      throw new Error('No default media set found');\n    }\n    return this.sets[0];\n  }\n\n  getMediaListFromSet(index: number): AdaptiveMedia[] {\n    return Array.from(this.sets[index]);\n  }\n\n  addSet(set: AdaptiveMediaSet) {\n    if (set.parent) {\n      throw new Error('Set already has a parent period');\n    }\n    set.parent = this;\n    this.sets.push(set);\n  }\n\n  filterByContainedMediaTypes(mediaTypeFlags: MediaTypeSet, identical = false): AdaptiveMediaSet[] {\n    return this.sets.filter((mediaSet) =>\n      mediaSet.mediaContainerInfo.intersectsMediaTypeSet(mediaTypeFlags, identical)\n    )\n  }\n}\n","/**\n * @module\n *\n * Functions to read & write coded types from/to bytes buffers in memory\n *\n */\n\nexport const MAX_UINT_32 = 4294967296;\nexport const MAX_UINT_16 = 65536;\n\nexport const readUint16 = (buffer: Uint8Array, offset: number): number => {\n  const val = buffer[offset] << 8 |\n              buffer[offset + 1];\n  return val < 0 ? MAX_UINT_16 + val : val;\n}\n\nexport const readUint32 = (buffer: Uint8Array, offset: number): number => {\n  const val = buffer[offset] << 24 |\n              buffer[offset + 1] << 16 |\n              buffer[offset + 2] << 8 |\n              buffer[offset + 3];\n  return val < 0 ? MAX_UINT_32 + val : val;\n}\n\nexport const writeUint32 = (buffer: Uint8Array, offset: number, value: number) => {\n  buffer[offset] = value >> 24;\n  buffer[offset+1] = (value >> 16) & 0xff;\n  buffer[offset+2] = (value >> 8) & 0xff;\n  buffer[offset+3] = value & 0xff;\n}\n\nexport const utf8BytesToString = (bytes: Uint8Array): string => {\n  return String.fromCharCode.apply(null, bytes)\n}\n\nexport const unicodeBytesToString = (bytes: Uint16Array): string => {\n  return String.fromCharCode.apply(null, bytes)\n}\n\nexport function utf8StringToArray(str: string): ArrayBuffer {\n  var buf = new ArrayBuffer(str.length); // 2 bytes for each char\n  var bufView = new Uint8Array(buf);\n  for (var i=0, strLen=str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return buf;\n}\n\n","export interface Cloneable<T> {\n  clone(): T\n}\n\n/**\n *\n * Deep-clones an object.\n *\n * Uses JSON stringify-parse method\n * @see https://stackoverflow.com/questions/122102/what-is-the-most-efficient-way-to-deep-clone-an-object-in-javascript\n * \"stringify\" proven fastest method to do deep-cloning @see http://jsben.ch/bWfk9\n * @param o\n */\nexport function deepCloneObject<T>(o: any): T {\n  // Deep clone will fail if we have circular dependencies\n  try {\n    return JSON.parse(JSON.stringify(o))\n  } catch(e) {\n    throw new Error('Failed to deep-clone object. Inner error: ' + e.message)\n  }\n}\n\n/**\n *\n * Copies all own enumarable properties of an object (map-dictionnary-like clone)\n *\n * Allows to specify wether the new object should be a plain map (prototype-less)\n *\n * Be aware that functions that are own properties will not change their bound context upon copying.\n *\n * @param o\n * @param asMap\n */\nexport function shallowCloneObject<T>(o: any, asMap: boolean): T {\n  return Object.assign(asMap ? Object.create(null) : {}, o)\n}\n\n/**\n * Copies all own enumarable properties of an object (map-dictionnary-like clone)\n * into a new instance with the given prototype and class properties.\n *\n * Be aware that functions that are own properties will not change their bound context upon copying.\n *\n * Methods of the passed prototype will obviously be bound to the instance as part of the object creation.\n *\n * @param o\n * @param proto\n */\nexport function shallowCloneObjectWithPrototype<T>(o: any, proto: object, properties: PropertyDescriptorMap): T {\n  return Object.assign(Object.create(proto, properties), o)\n}\n\n/**\n * Implements Cloneable interface with deep method\n */\nexport class CloneableObject<T> implements Cloneable<T> {\n  clone(): T {\n    return deepCloneObject<T>(this)\n  }\n}\n\n/**\n * Implements cloneable interface with shallow method.\n */\nexport class CloneableScaffold<T> implements Cloneable<T> {\n  clone(): T {\n    return shallowCloneObject<T>(this, true)\n  }\n}\n\n/**\n * Implements cloneable interface with shallow method.\n *\n * Constructs a prototype-less object (plain map)\n * and uses `asMap` flag for shallow-copy.\n */\nexport class CloneableDictionnary<T> implements Cloneable<T> {\n  constructor() {\n    return Object.create(null)\n  }\n\n  clone(): T {\n    return shallowCloneObject<T>(this, true)\n  }\n}\n","import * as m3u8Parser from 'm3u8-parser';\n\nimport {Resource, ResourceEvents, ParseableResource} from './resource'\n\nimport {ByteRange} from './byte-range'\n\nimport {AdaptiveMediaPeriod, AdaptiveMediaSet, AdaptiveMedia} from './adaptive-media'\n\nimport {getLogger, LoggerLevels} from './logger'\nimport { MediaSegment } from './media-segment';\nimport { MediaLocator } from './media-locator';\nimport { resolveUri } from './url';\nimport { utf8BytesToString } from './bytes-read-write';\n\nconst {\n  log,\n  warn\n} = getLogger('hls-m3u8', LoggerLevels.ON)\n\nexport enum HlsM3u8FileType {\n  MASTER = 'master',\n  MEDIA = 'media'\n}\n\nexport enum HlsM3u8MediaPlaylistType {\n  LIVE = 'live',\n  VOD = 'vod'\n}\n\nexport class HlsM3u8File extends Resource implements ParseableResource<AdaptiveMediaPeriod[]>  {\n\n  private _m3u8ParserResult: any; // this comes from the plain JS m3u8-parser module\n  private _parsed: boolean = false;\n\n  private _fileType: HlsM3u8FileType = null;\n  private _hlsMediaPlaylists: HlsM3u8MediaPlaylist[] = [];\n\n  private _periods: AdaptiveMediaPeriod[] = [new AdaptiveMediaPeriod()];\n  private _adaptiveMediaSet: AdaptiveMediaSet = new AdaptiveMediaSet();\n\n  constructor(uri, fileType: HlsM3u8FileType = null, baseUri?: string) {\n    super(uri, null, baseUri);\n\n    this._fileType = fileType;\n\n    this._periods[0].sets.push(this._adaptiveMediaSet);\n  }\n\n  hasBeenParsed() {\n    return this._parsed\n  }\n\n  parse(): Promise<AdaptiveMediaPeriod[]> {\n    const buf = this.buffer\n    if (!buf) {\n      throw new Error('No data to parse')\n    }\n\n    if (this._parsed) {\n      return Promise.resolve(this._periods);\n    }\n\n    const text = utf8BytesToString(new Uint8Array(buf))\n\n    const parser: any = new m3u8Parser.Parser();\n\n    parser.push(text);\n    parser.end();\n\n    //console.log(parser.manifest);\n\n    const manifest = this._m3u8ParserResult = parser.manifest;\n\n    if (manifest.playlists && manifest.playlists.length) {\n      this._fileType = HlsM3u8FileType.MASTER;\n      this._processMasterPlaylist();\n    } else if(manifest.segments && manifest.segments.length) {\n      this._fileType = HlsM3u8FileType.MEDIA;\n      this._processMediaVariantPlaylist();\n    } else {\n      throw new Error('Could not determine type of HLS playlist');\n    }\n\n    this._parsed = true;\n    return Promise.resolve(this._periods);\n  }\n\n  private _processMasterPlaylist() {\n    this._m3u8ParserResult.playlists.forEach((playlist) => {\n\n      const media: AdaptiveMedia = new AdaptiveMedia();\n\n      const a = playlist.attributes;\n\n      media.bandwidth = a.BANDWIDTH; // || a.['AVERAGE-BANDWIDTH'];\n      media.codecs = a.CODECS;\n      media.videoInfo = {\n        width: a.RESOLUTION.width,\n        height: a.RESOLUTION.height\n      }\n      media.label = a.NAME;\n\n      media.segmentIndexUri = resolveUri(playlist.uri, this.getUrl());\n      media.segmentIndexRange = null;\n\n      const hlsMediaPlaylistFile =\n        new HlsM3u8File(media.segmentIndexUri, HlsM3u8FileType.MEDIA, this.getUrl());\n\n      const hlsMediaPlaylist = new HlsM3u8MediaPlaylist(\n        hlsMediaPlaylistFile\n      );\n\n      media.segmentIndexProvider = () => {\n        return hlsMediaPlaylist.fetch()\n          .then(() =>  hlsMediaPlaylist.parse())\n          .then((adaptiveMedia: AdaptiveMedia) => {\n\n            // pass back info from master-playlist to model created when parsing variant list\n            adaptiveMedia.bandwidth = media.bandwidth;\n            adaptiveMedia.codecs = media.codecs;\n            adaptiveMedia.videoInfo = media.videoInfo\n            adaptiveMedia.label = media.label;\n            adaptiveMedia.segmentIndexUri = media.segmentIndexUri;\n            adaptiveMedia.segmentIndexRange = media.segmentIndexRange;\n            adaptiveMedia.segmentIndexProvider = media.segmentIndexProvider;\n\n            log('got master-playlist segment index provider result:', adaptiveMedia.getUrl());\n\n            // pass back info from variant list to master model\n            media.externalIndex = adaptiveMedia.externalIndex;\n\n            return adaptiveMedia.segments\n          })\n      }\n\n      this._hlsMediaPlaylists.push(hlsMediaPlaylist);\n      this._adaptiveMediaSet.add(media);\n    });\n  }\n\n  private _processMediaVariantPlaylist() {\n    log('parsing media playlist:', this.getUrl());\n\n    let media: AdaptiveMedia = new AdaptiveMedia();\n\n    const hlsMediaPlaylist = new HlsM3u8MediaPlaylist(this);\n\n    const mediaSequenceIndex = this._m3u8ParserResult.mediaSequence;\n    const isLive: boolean = !this._m3u8ParserResult.playlistType\n      || this._m3u8ParserResult.playlistType.toLowerCase() === 'live';\n\n    // TODO handle discontinuities\n\n    media.isLive = isLive;\n    media.externalIndex = mediaSequenceIndex;\n\n    media.segmentIndexProvider = () => {\n      return hlsMediaPlaylist.fetch()\n        .then(() => hlsMediaPlaylist.parse())\n        .then((adaptiveMedia: AdaptiveMedia) => adaptiveMedia.segments)\n    }\n\n    let startTime: number = 0;\n    let segmentIndex: number = 0;\n\n    //console.log(this._m3u8ParserResult)\n\n    this._m3u8ParserResult.segments.forEach((segment: {duration: number, timeline: number, uri: string}) => {\n      const endTime = startTime + segment.duration;\n\n      const mediaSegment = new MediaSegment(\n        MediaLocator.fromRelativeURI(segment.uri, this.getUrl(), null, startTime, endTime)\n      );\n\n      mediaSegment.setOrdinalIndex(mediaSequenceIndex + segmentIndex);\n      mediaSegment.setTimeOffset(segment.timeline);\n\n      // optimization: we dont' set the reorder/dedupe flag here since we know the media is \"vanilla\"\n      media.addSegment(mediaSegment, false);\n\n      startTime = endTime;\n      segmentIndex++;\n    });\n\n    log('adding media to file:', this.getUrl());\n\n    // if it's a variant playlist the file should only ever hold one model\n    this._adaptiveMediaSet.clear();\n    this._adaptiveMediaSet.add(media);\n  }\n\n  fetch(): Promise<Resource> {\n    return super.fetch().then((r: Resource) => {\n      log('data loaded')\n      // reset parsed flag\n      this._parsed = false;\n      return this;\n    }).then(() => {\n      return this;\n    })\n  }\n\n  getM3u8FileType(): HlsM3u8FileType {\n    return this._fileType;\n  }\n\n  getM3u8ParserResult(): any {\n    return this._m3u8ParserResult;\n  }\n}\n\nexport class HlsM3u8MediaPlaylist extends Resource implements ParseableResource<AdaptiveMedia> {\n  private _file: HlsM3u8File;\n\n  constructor(m3u8File: HlsM3u8File) {\n    // automatically resolve the inner resource if it has a base URI\n    super(m3u8File.getUrl());\n\n    if (m3u8File.hasBeenParsed()) {\n      if (m3u8File.getM3u8FileType() !== HlsM3u8FileType.MEDIA) {\n        throw new Error('File is not a media playlist');\n      }\n    }\n\n    this._file = m3u8File;\n  }\n\n  hasBeenParsed() {\n    return this._file.hasBeenParsed();\n  }\n\n  parse(): Promise<AdaptiveMedia> {\n    return this._file.parse()\n      .then((adaptiveMediaPeriods) => {\n\n        const media = adaptiveMediaPeriods[0].getDefaultSet().getDefaultMedia();\n\n        log('parsed media playlist:', this.getUrl())\n\n        // We assume that the embedded file object\n        // only parsed exactly one adaptive-media list\n        // and has one period - always the case with an HLS chunklist.\n        return media;\n      })\n  }\n\n  fetch(): Promise<Resource> {\n    return this._file.fetch();\n  }\n}\n","// TODO: Move to Objec-TS long-term\n\nconst PREFIX_ROOT = 'R14lt0'\n\n// Disables all logs when false, overrides all local settings\n// When true, logging levels are applied as expected per category\nconst GLOBAL_LOG_ENABLE = true;\n\nexport type LoggerFunc = (...args: any[]) => void\n\nexport type Logger = {\n  info: LoggerFunc,\n  log: LoggerFunc\n  debug: LoggerFunc\n  warn: LoggerFunc\n  error: LoggerFunc\n}\n\nconst noop = () => {};\n\nconst getPrefix = function(type: string, category: string): string {\n    const prefix = `[${PREFIX_ROOT}]:[${type}]:[${category}]>`\n    return prefix;\n};\n\nexport enum LoggerLevels {\n    ON = Infinity,\n    LOG = 5,\n    INFO = 4,\n    DEBUG = 3,\n    WARN = 2,\n    ERROR = 1,\n    OFF = 0\n}\n\nexport const getLogger = function(category: string, level: number = LoggerLevels.ON): Logger {\n\n    if (!GLOBAL_LOG_ENABLE) {\n        level = LoggerLevels.OFF\n    }\n\n    return {\n        info: level >= LoggerLevels.INFO ? console.info.bind(console, getPrefix('i', category)) : noop,\n        log: level >= LoggerLevels.LOG ? console.log.bind(console, getPrefix('l', category)) : noop,\n        debug: level >= LoggerLevels.DEBUG ? console.debug.bind(console, getPrefix('d', category)) : noop,\n        warn: level >= LoggerLevels.WARN ? console.warn.bind(console, getPrefix('w', category)) : noop,\n        error: level >= LoggerLevels.ERROR ? console.error.bind(console, getPrefix('e', category)) : noop\n    }\n};\n\n","import { CloneableScaffold } from \"./cloneable\";\n\nexport type VideoInfo = {\n  width: number\n  height: number\n }\n\n export type AudioInfo = {\n   language: string\n   channels: number\n }\n\n export type TextInfo = {\n   language: string\n }\n\n export enum MediaTypeFlag {\n   AUDIO = 0b001,\n   VIDEO = 0b010,\n   TEXT = 0b100\n }\n\n export type MediaTypeSet = Set<MediaTypeFlag>\n\n /**\n  * Human-readable `MediaTypeFlag`\n  * @param type\n  */\n export function getMediaTypeFlagName(type: MediaTypeFlag): string {\n   switch(type) {\n   case MediaTypeFlag.AUDIO: return 'audio'\n   case MediaTypeFlag.VIDEO: return 'video'\n   case MediaTypeFlag.TEXT: return 'text'\n   default: return null\n   }\n}\n\nexport class MediaContainerInfo extends CloneableScaffold<MediaContainerInfo> {\n  containedTypes: Set<MediaTypeFlag> = new Set()\n\n  containsMediaType(type: MediaTypeFlag): boolean {\n    return this.containedTypes.has(type)\n  }\n\n  intersectsMediaTypeSet(mediaTypeSet: MediaTypeSet, indentical: boolean = false): boolean {\n    let hasOne = false\n    let hasAll = true\n    mediaTypeSet.forEach((mediaTypeFlag) => {\n      hasOne = this.containedTypes.has(mediaTypeFlag)\n      if (!hasOne && hasAll) {\n        hasAll = false\n      }\n    })\n    return indentical ? hasAll : hasOne\n  }\n\n  hasOneOf(mediaTypeSet: MediaTypeSet): boolean {\n    return this.intersectsMediaTypeSet(mediaTypeSet, false)\n  }\n\n  hasAll(mediaTypeSet: MediaTypeSet) {\n    return this.intersectsMediaTypeSet(mediaTypeSet, true)\n  }\n}\n\nexport interface MediaContainer {\n  mediaContainerInfo: MediaContainerInfo\n}\n","import {ByteRange} from './byte-range'\n\nimport {\n  //URLObject,\n  resolveUri} from './url'\n\nexport type MediaClockTime = number\n\nexport class MediaLocator {\n\n  static fromRelativeURI(\n      relativeUri: string,\n      baseUri?: string,\n      byteRange?: ByteRange,\n      startTime?: MediaClockTime,\n      endTime?: MediaClockTime): MediaLocator {\n\n    return new MediaLocator(\n      resolveUri(relativeUri, baseUri),\n      byteRange,\n      startTime,\n      endTime\n    )\n  }\n\n  constructor(\n    readonly uri: string,\n    readonly byteRange: ByteRange = null,\n    readonly startTime: MediaClockTime,\n    readonly endTime: MediaClockTime,\n  ) {\n    if (startTime > endTime) {\n      throw new Error('Media-locator can not be created with startTime > endTime');\n    }\n    // FIXME: check that we have an absolute and valid URL here\n  }\n\n  /*\n  toURLObject(): URLObject {\n    return new URLObject(this.uri)\n  }\n  */\n}\n","import {Resource, DecryptableResource, ParseableResource} from './resource'\n\nimport {mediaCacheInstance} from './media-cache'\nimport {MediaLocator, MediaClockTime} from './media-locator'\n\nimport {\n  VideoInfo,\n  AudioInfo,\n  TextInfo,\n  MediaTypeFlag,\n  MediaContainer,\n  MediaContainerInfo\n} from './media-container-info'\n\nimport {getLogger} from './logger'\nimport { TimeInterval } from './time-intervals';\n\nconst {\n  log\n} = getLogger('media-segment')\n\n/**\n *\n * Represents a time-bound segment of a media\n *\n * @fires fetch:aborted\n * @fires fetch:progress\n * @fires fetch:errored\n * @fires fetch:succeeded\n *\n * @fires buffer:set\n * @fires buffer:clear\n */\nexport class MediaSegment extends Resource implements MediaContainer, DecryptableResource {\n\n  public cached: boolean;\n\n  private locator_: MediaLocator;\n\n  private timeOffset_: number = 0;\n\n  private ordinalIndex_: number;\n\n  mediaContainerInfo: MediaContainerInfo = new MediaContainerInfo()\n\n  constructor(locator: MediaLocator, mimeType: string = null, cached = false) {\n    super(locator.uri, locator.byteRange, null, mimeType)\n\n    this.cached = cached\n    this.locator_ = locator\n  }\n\n  hasBeenParsed() { return false }\n\n  parse() { return Promise.resolve(this) }\n\n  decrypt() {\n    return null\n  }\n\n  getTimeInterval(): TimeInterval {\n    return new TimeInterval(this.startTime, this.endTime);\n  }\n\n  setTimeOffset(o: number) {\n    this.timeOffset_ = o;\n  }\n\n  getTimeOffset(): number { return this.timeOffset_; }\n\n  setOrdinalIndex(i: number) {\n    this.ordinalIndex_ = i;\n  }\n\n  getOrdinalIndex(): number { return this.ordinalIndex_; }\n\n  get duration(): MediaClockTime {\n    return this.endTime - this.startTime;\n  }\n\n  get startTime(): MediaClockTime {\n    return this.locator_.startTime + this.timeOffset_\n  }\n\n  get endTime(): MediaClockTime {\n    return this.locator_.endTime + this.timeOffset_\n  }\n}\n","import {EventEmitter} from 'eventemitter3'\n\nexport class Queue<T> extends EventEmitter {\n\n  private _list: T[] = []\n\n  /**\n   * Returns a copy of the internal array\n   */\n  getArray(): Array<T> {\n    return this._list.slice(0);\n  }\n\n  get size() {\n    return this._list.length\n  }\n\n  /**\n   * First item\n   */\n  begin(): T {\n    return this._list[0] || null\n  }\n\n  /**\n   * Last item\n   */\n  end(): T {\n    return this._list[this._list.length - 1] || null\n  }\n\n  /**\n   * Adds to the end\n   * @param item\n   */\n  add(item: T): Queue<T> {\n    this._list.push(item)\n    return this\n  }\n\n  /**\n   * Removes from the end\n   */\n  subtract(): T {\n    return this._list.pop()\n  }\n\n  /**\n   * Alias for subtract method\n   */\n  pop(): T {\n    return this.subtract();\n  }\n\n  /**\n   * Adds to the begin\n   * @param item\n   */\n  enqueue(item: T): Queue<T> {\n    this._list.unshift(item)\n    return this\n  }\n\n  /**\n   * Removes from begin\n   */\n  dequeue(): T {\n    return this._list.shift()\n  }\n\n  insertAt(index: number, ...items: T[]): Queue<T> {\n    this._list.splice(index, 0, ...items)\n    return this\n  }\n\n  removeAll(item: T, limit = Infinity): number {\n    let rmCnt = 0\n    while(true) {\n      const index = this._list.indexOf(item)\n      if (index < 0 || rmCnt + 1 > limit) {\n        break\n      }\n      this._list.splice(index, 1)\n      rmCnt++\n    }\n    return rmCnt\n  }\n\n  removeOne(item: T): boolean {\n    return !! this.removeAll(item, 1)\n  }\n\n  get(index: number): T {\n    return this._list[index] || null\n  }\n\n  forEach(forEachFn: (item, index?) => void): Queue<T> {\n    this._list.forEach(forEachFn)\n    return this\n  }\n\n  containsAtLeastOnce(item: T) {\n    return this._list.indexOf(item) >= 0;\n  }\n}\n","import { XHRCallbackFunction, XHRMethod, XHRResponseType, XHRHeaders, XHRData, XHR, XHRState } from \"./xhr\";\nimport { ByteRange } from \"./byte-range\";\nimport { utf8StringToArray, unicodeBytesToString, utf8BytesToString } from \"./bytes-read-write\";\nimport { Resource } from \"./resource\";\n\nexport interface IResourceRequest {\n  abort();\n  wasSuccessful(): boolean;\n\n  readonly xhrState: XHRState;\n\n  readonly responseType: XHRResponseType;\n  readonly responseData: XHRData;\n  readonly responseHeaders: object;\n\n  readonly loadedBytes: number;\n  readonly totalBytes: number;\n\n  readonly hasBeenAborted: boolean;\n  readonly hasErrored: boolean;\n  readonly error: Error;\n\n  readonly secondsUntilLoading: number;\n  readonly secondsUntilDone: number;\n  readonly secondsUntilHeaders: number;\n}\n\nexport class ResourceRequestResponseData {\n  constructor(public readonly request: IResourceRequest, public readonly resource: Resource) {}\n\n  isBinary() {\n    return this.request.responseData === XHRResponseType.ARRAY_BUFFER\n      || this.request.responseData === XHRResponseType.BLOB\n  }\n\n  isChars() {\n    return this.request.responseType === XHRResponseType.TEXT\n      || this.request.responseType === XHRResponseType.JSON;\n  }\n\n  getArrayBuffer(): ArrayBuffer {\n    if (this.request.responseType === XHRResponseType.TEXT\n      || this.request.responseType === XHRResponseType.JSON) {\n      return utf8StringToArray(<string> this.request.responseData);\n    }\n    else if (this.request.responseType === XHRResponseType.ARRAY_BUFFER) {\n      return <ArrayBuffer> (this.request.responseData as any);\n    }\n    else {\n      console.error('Can not convert response data to arraybuffer for url: ' + this.resource.getUrl());\n      return null;\n    }\n  }\n\n  getString(unicode16: boolean = false): string {\n    if (this.request.responseType === XHRResponseType.TEXT\n      || this.request.responseType === XHRResponseType.JSON) {\n        return <string> this.request.responseData;\n    }\n    else if (this.request.responseType === XHRResponseType.ARRAY_BUFFER) {\n      if (unicode16) {\n        return unicodeBytesToString(new Uint16Array(<ArrayBuffer> (this.request.responseData as any)));\n      } else {\n        return utf8BytesToString(new Uint8Array(<ArrayBuffer> (this.request.responseData as any)));\n      }\n    }\n    else {\n      console.error('Can not convert response data to string');\n      return null;\n    }\n  }\n\n  // TODO: add getBlob/Document/Form ...\n}\n\nexport type ResourceRequestCallback = (req: IResourceRequest, isProgressUpdate: boolean) => void;\n\nexport type ResourceRequestOptions = Partial<{\n  requestCallback: ResourceRequestCallback,\n  method: XHRMethod,\n  responseType: XHRResponseType,\n  byteRange: ByteRange,\n  headers: XHRHeaders,\n  data: XHRData,\n  withCredentials: boolean,\n  timeout: number,\n  forceXMLMimeType: boolean\n}>\n\nexport type ResourceRequestMaker = (url: string, opts: ResourceRequestOptions) => IResourceRequest;\n\nexport const makeDefaultRequest: ResourceRequestMaker\n  = (url, opts) => new XHR(url,\n    opts.requestCallback,\n    opts.method,\n    opts.responseType,\n    opts.byteRange,\n    opts.headers,\n    opts.data,\n    opts.withCredentials,\n    opts.timeout,\n    opts.forceXMLMimeType\n  );\n\n","\nimport {EventEmitter} from 'eventemitter3'\n\nimport {\n  resolveUri,\n  //URLObject\n} from './url'\n\nimport {\n  XHRMethod,\n  XHRResponseType,\n  XHRState,\n} from './xhr'\n\nimport {ByteRange} from './byte-range'\nimport { ResourceRequestMaker, IResourceRequest, makeDefaultRequest, ResourceRequestResponseData } from './resource-request';\n\nexport enum ResourceEvents {\n  BUFFER_SET = 'buffer:set',\n  BUFFER_CLEAR = 'buffer:clear',\n  FETCH_PROGRESS = 'fetch:progress',\n  FETCH_ABORTED = 'fetch:aborted',\n  FETCH_ERRORED = 'fetch:errored',\n  FETCH_SUCCEEDED = 'fetch:succeeded',\n  FETCH_SUCCEEDED_NOT = 'fetch:succeeded-not',\n}\n\nexport interface ParseableResource<ParsingResultType> extends Resource {\n  hasBeenParsed(): boolean\n\n  parse(): Promise<ParsingResultType>\n}\n\nexport interface SegmentableResource<SegmentType> extends Resource {\n\n  getSegments(): Promise<SegmentType[]>\n}\n\nexport interface DecryptableResource extends Resource {\n  decrypt(): Promise<DecryptableResource>\n}\n\nexport class Resource extends EventEmitter {\n\n  private uri_: string;\n  private baseUri_: string;\n  private byteRange_: ByteRange;\n  private ab_: ArrayBuffer;\n  private abortedCnt_: number;\n  private fetchAttemptCnt_: number;\n\n  private requestMaker_: ResourceRequestMaker | null = null;\n  private request_: IResourceRequest = null;\n\n  private requestResponseData_: ResourceRequestResponseData[] = [];\n\n  private requestBytesLoaded_: number = NaN;\n  private requestBytesTotal_: number = NaN;\n\n  private mimeType_: string // TODO: set this from response headers;\n\n  private fetchLatency_: number = NaN;\n  private fetchResolve_: (ms: Resource) => void = null\n  private fetchReject_: (e: Error) => void = null\n\n  /**\n   *\n   * @param uri may be relative or absolute\n   * @param byteRange\n   * @param baseUri\n   * @param mimeType\n   */\n  constructor(uri: string, byteRange: ByteRange = null, baseUri: string = null, mimeType: string = null) {\n    super()\n\n    this.uri_ = uri\n    this.baseUri_ = baseUri\n    this.byteRange_ = byteRange\n    this.mimeType_ = mimeType\n\n    this.ab_ = null\n\n    this.abortedCnt_ = 0\n    this.fetchAttemptCnt_ = 0\n\n    this.request_ = null\n  }\n\n  get uri(): string {\n    return this.uri_\n  }\n\n  get baseUri(): string {\n    return this.baseUri_\n  }\n\n  get byteRange(): ByteRange {\n    return this.byteRange_\n  }\n\n  get mimeType(): string {\n    return this.mimeType_\n  }\n\n  get hasBuffer(): boolean {\n    return this.ab_ !== null\n  }\n\n  get hasRequestResponses(): boolean {\n    return this.requestResponseData_.length > 0;\n  }\n\n  get hasData(): boolean {\n    return this.hasBuffer || this.hasRequestResponses;\n  }\n\n  get buffer(): ArrayBuffer {\n    return this.ab_\n  }\n\n  get timesAborted(): number {\n    return this.abortedCnt_\n  }\n\n  get timesFetchAttempted(): number {\n    return this.fetchAttemptCnt_\n  }\n\n  get isFetching(): boolean {\n    return !! this.request_\n  }\n\n  get fetchLatency(): number {\n    return this.fetchLatency_\n  }\n\n  get requestedBytesLoaded(): number { return this.requestBytesLoaded_ };\n\n  get requestedBytesTotal(): number { return this.requestBytesTotal_ };\n\n  setBaseUri(baseUri: string) {\n    this.baseUri_ = baseUri;\n  }\n\n  /**\n   * Tries to resolve the resource's URI to an absolute URL,\n   * with the given `baseUri` at construction or the optional argument\n   * (which overrides the base of this instance for this resolution, but does not overwrite it).\n   * Create a new resource object to do that.\n   */\n  getUrl(base?: string): string {\n    return resolveUri(this.uri, base ? base : this.baseUri_)\n  }\n\n  /*\n  getURLObject(): URLObject {\n    return new URLObject(this.getUrl())\n  }\n  */\n\n  setBuffer(ab: ArrayBuffer): void {\n    this.ab_ = ab\n    this.emit(ResourceEvents.BUFFER_SET)\n  }\n\n  clearBuffer(ab): void {\n    this.ab_ = null\n    this.emit(ResourceEvents.BUFFER_CLEAR)\n  }\n\n  fetch(): Promise<Resource> {\n    this.fetchAttemptCnt_++\n\n    if (this.request_) {\n      throw new Error('Assertion failed: resource already has request for ongoing fetch');\n    }\n\n    const fetchPromise = new Promise<Resource>((resolve, reject) => {\n      this.fetchResolve_ = resolve\n      this.fetchReject_ = reject\n    })\n\n    const url = this.getUrl();\n    //console.log(url);\n\n    const makeRequest = this.getRequestMaker();\n\n    this.requestBytesLoaded_ = NaN;\n    this.requestBytesTotal_ = NaN;\n\n    this.request_ = makeRequest(url, {\n      requestCallback: this.onRequestCallback_.bind(this),\n      method: XHRMethod.GET,\n      responseType: XHRResponseType.ARRAY_BUFFER,\n      byteRange: this.byteRange\n    });\n\n    return fetchPromise\n  }\n\n  abort() {\n    if (!this.request_) {\n      throw new Error('Assertion failed: can`t abort, resource has no ongoing request');\n    }\n\n    this.abortedCnt_++\n    this.request_.abort()\n  }\n\n  /**\n   *\n   * @param rm passing null means use default\n   */\n  setRequestMaker(rm: ResourceRequestMaker | null) {\n    this.requestMaker_ = rm;\n  }\n\n  getRequestMaker(): ResourceRequestMaker {\n    if (this.requestMaker_) {\n      return this.requestMaker_;\n    }\n    return makeDefaultRequest;\n  }\n\n  hasCustomRequestMaker(): boolean {\n    return !!this.requestMaker_;\n  }\n\n  getRequestResponses(): ResourceRequestResponseData[] {\n    return this.requestResponseData_;\n  }\n\n  flushAllRequestResponses(): void {\n    this.requestResponseData_ = [];\n  }\n\n  getRequestResponse(pop: boolean = false) {\n    if (pop) {\n      return this.requestResponseData_.pop();\n    } else {\n      if (this.requestResponseData_.length === 0) {\n        throw new Error('No response datas for resources');\n      }\n      return this.requestResponseData_[this.requestResponseData_.length - 1];\n    }\n  }\n\n  setExternalyFetchedBytes(loaded: number, total: number, latency: number) {\n    this.requestBytesLoaded_ = loaded;\n    this.requestBytesTotal_ = total;\n    this.fetchLatency_ = latency;\n    this.emit(ResourceEvents.FETCH_PROGRESS);\n  }\n\n  private onRequestCallback_(request: IResourceRequest, isProgressUpdate: boolean) {\n\n    //console.log('onRequestCallback', request.xhrState, XHRState.DONE)\n\n    let reset: boolean = false;\n\n    if (request !== this.request_) {\n      throw new Error('Assertion failed: request-callback has invalid user-data reference');\n    }\n\n    if (request.xhrState === XHRState.DONE) {\n\n      this.fetchLatency_ = request.secondsUntilDone;\n\n      if (request.wasSuccessful()) {\n        const response = new ResourceRequestResponseData(request, this)\n        this.requestResponseData_.push(response);\n        //console.log('data', request.responseData)\n        this.setBuffer(response.getArrayBuffer())\n        //console.log('resolve')\n        this.fetchResolve_(this)\n        this.emit(ResourceEvents.FETCH_SUCCEEDED)\n      } else {\n        // this.fetchReject_(); // reject or just let time-out in case?\n        this.emit(ResourceEvents.FETCH_SUCCEEDED_NOT);\n      }\n\n      reset = true;\n\n    } else if (request.xhrState === XHRState.LOADING) {\n      this.fetchLatency_ = request.secondsUntilLoading\n    } else if (request.xhrState === XHRState.HEADERS_RECEIVED) {\n      this.fetchLatency_ = request.secondsUntilHeaders\n    } else if (request.xhrState === XHRState.OPENED) {\n      //\n    }\n\n    if (isProgressUpdate) {\n      this.requestBytesLoaded_ = request.loadedBytes;\n      this.requestBytesTotal_ = request.totalBytes;\n      this.emit(ResourceEvents.FETCH_PROGRESS, request.loadedBytes, request.totalBytes);\n    }\n\n    if (request.hasBeenAborted) {\n      this.emit(ResourceEvents.FETCH_ABORTED)\n\n      this.fetchReject_(new Error('Fetching media segment was aborted'))\n    }\n\n    if (request.hasErrored) {\n      this.emit(ResourceEvents.FETCH_ERRORED)\n\n      this.fetchReject_(request.error)\n    }\n\n    if (reset) {\n      // reset fetch promise hooks\n      this.fetchReject_ = null\n      this.fetchResolve_ = null\n      // XHR object is done and over, let's get rid of it\n      this.request_ = null\n    }\n  }\n\n}\n","/**\n * @author Stephan Hesse (c) Copyright 2018 <stephan@emliri.com>\n *\n */\n\n/**\n * @module time-intervals Allows to deal with time-intervals/ranges and perform all sorts of operations on them\n * including merging/concat, flattening, aggregation/duration/window-sum and comparison of all sorts.\n *\n * Can also digest native TimeRanges objects.\n */\n\nexport type TimeIntervalProperties = {\n  seekable: boolean\n  desired: boolean\n  fetched: boolean\n};\n\nexport class TimeInterval {\n  private _props: TimeIntervalProperties = {\n    seekable: true,\n    desired: false,\n    fetched: false\n  };\n\n  constructor(\n    public readonly start: number,\n    public readonly end: number\n  ) {\n    if(!Number.isFinite(start) || !Number.isFinite(end)) {\n      throw new Error('Interval is non-finite');\n    }\n\n    if (end <= start) {\n      throw new Error(`Time-range must have end (${end}) strictly larger than start (${start})`);\n    }\n  }\n\n  get props(): TimeIntervalProperties {\n    return this._props;\n  }\n\n  /**\n   * @returns must be > 0\n   */\n  get duration(): number {\n    return this.end - this.start;\n  }\n\n  /**\n   *\n   * @param range\n   * @returns positive if `range` starts after this starts\n   */\n  compareStart(range: TimeInterval): number {\n    return range.start - this.start;\n  }\n\n  /**\n   *\n   * @param range\n   * @returns positive if `range` ends after this ends\n   */\n  compareEnd(range: TimeInterval): number {\n    return range.end - this.end;\n  }\n\n  /**\n   *\n   * @param time a value to compare this interval with\n   * @param strict when true, uses strict comparison (boundaries not part of interval)\n   * @returns true when time values lies within interval\n   */\n  compareInterval(time: number, strict: boolean = false): boolean {\n    if (strict) {\n      return time > this.start && time < this.end;\n    } else {\n      return time >= this.start && time <= this.end;\n    }\n  }\n\n  /**\n   *\n   * @param range\n   * @returns true when `range` is fully inside this\n   */\n  contains(range: TimeInterval): boolean {\n    return this.compareStart(range) >= 0 && this.compareEnd(range) <= 0;\n  }\n\n  /**\n   *\n   * @param range\n   * @returns true when `range` interval is equal to this\n   */\n  equals(range: TimeInterval): boolean {\n    return this.compareStart(range) === 0 && this.compareEnd(range) === 0;\n  }\n\n  /**\n   *\n   * @param range\n   * @returns true when ranges overlap somehow\n   */\n  overlapsWith(range: TimeInterval): boolean {\n    const [start, end] = this._getOverlapRangeBoundaries(range);\n    return start < end;\n  }\n\n  /**\n   *\n   * @param range\n   * @returns true when `range` and this are continuous in their interval values\n   */\n  touchesWith(range: TimeInterval): boolean {\n    return (range.end === this.start || this.end === range.start);\n  }\n\n  /**\n   *\n   * @param range\n   * @returns true when this is continued by `range`\n   * See `touchesWith` but implies order, when this comes after `range`.\n   */\n  continues(range: TimeInterval): boolean {\n    return range.compareStart(this) === range.duration;\n  }\n\n  /**\n   *\n   * @param range\n   * @returns a new range object that represents the overlapping range region (if any) or `null`\n   */\n  getOverlappingRange(range: TimeInterval): TimeInterval | null {\n    const [start, end] = this._getOverlapRangeBoundaries(range);\n\n    // if both ranges don't overlap at all\n    // we will obtain end <= start here\n    // this is a shorthand to do this check built in our constructor\n    let overlapRange;\n    try {\n      overlapRange = new TimeInterval(\n        start, end\n      );\n    } catch(err) {\n      overlapRange = null;\n    }\n\n    return overlapRange;\n  }\n\n  /**\n   *\n   * @param range\n   * @returns a new range object that represents the merge of two ranges (that must overlap)\n   */\n  getMergedRange(range: TimeInterval): TimeInterval | null {\n    if (!range.overlapsWith(this) && !range.touchesWith(this)) {\n      return null;\n    }\n\n    // If both ranges already overlap (or touch) then the merge is\n    // simply the range over the min of both starts and the max of both ends\n    return new TimeInterval(\n      Math.min(this.start, range.start),\n      Math.max(this.end, range.end)\n    )\n  }\n\n  getGapRange(range: TimeInterval): TimeInterval | null {\n    if (range.overlapsWith(this)) {\n      return null;\n    }\n\n    // If both ranges don't overlap at all\n    // simply the range over the min of both ends as start and the max of both starts as end\n    return new TimeInterval(\n      Math.min(this.end, range.end),\n      Math.max(this.start, range.start)\n    )\n  }\n\n  /**\n   *\n   * @param range\n   * @returns candidates for start/end points of overlapping ranges (when start > end then they don't overlap)\n   */\n  private _getOverlapRangeBoundaries(range: TimeInterval): [number, number] {\n    const startDiff = this.compareStart(range);\n    const endDiff = this.compareEnd(range);\n    let start: number;\n    let end: number;\n\n    // compute candidates for overlapping range boundaries\n    if (startDiff > 0) {\n      start = range.start;\n    } else {\n      start = this.start;\n    }\n\n    if (endDiff > 0) {\n      end = this.end;\n    } else {\n      end = range.end;\n    }\n\n    return [start, end];\n  }\n}\n\nexport class TimeIntervalContainer {\n\n  static fromTimeRanges(ranges: TimeRanges) {\n    const timeIntervalContainer = new TimeIntervalContainer();\n    timeIntervalContainer.addTimeRanges(ranges);\n  }\n\n  constructor(\n    private _ranges: TimeInterval[] = [],\n    private _isFlat: boolean = false\n  ) {}\n\n  get ranges(): TimeInterval[] {\n    return this._ranges;\n  }\n\n  get size(): number {\n    return this._ranges.length;\n  }\n\n  add(range: TimeInterval): TimeIntervalContainer {\n    this._isFlat = false;\n    this._ranges.push(range);\n    return this;\n  }\n\n  clear(): TimeIntervalContainer  {\n    this._ranges = [];\n    this._isFlat = false;\n    return this;\n  }\n\n  /**\n   * Flattens the time-ranges so that if they overlap or touch they get merged into one.\n   * This can be used to avoid when we add overlapping time-ranges that the container elements number\n   * grows while keeping the same necessary information for most use-cases.\n   * @returns a flattened version of the time-intervals in this container\n   */\n  flatten(inPlace: boolean = false): TimeIntervalContainer {\n    if (this._isFlat) {\n      return this;\n    }\n\n    const newRanges: TimeInterval[] = [];\n\n    let previousRange: TimeInterval = null;\n\n    this._ranges.forEach((range) => {\n      if (!previousRange) {\n        newRanges.push(range);\n        previousRange = range;\n        return;\n      }\n      const overlap = previousRange.getMergedRange(range);\n      if (overlap) {\n        newRanges.pop(); // pop of the previous range since it overlaps/touches with current\n        newRanges.push(overlap); // push in the merge of both\n        range = overlap; // the current range becomes the merged range\n      } else {\n        newRanges.push(range);\n      }\n      previousRange = range; // the previous range might also be merged one (as it may overlap/touch with future ranges)\n    })\n\n    if (inPlace) {\n      this._ranges = newRanges;\n      this._isFlat = true;\n      return this;\n    } else {\n      return new TimeIntervalContainer(newRanges, true);\n    }\n  }\n\n  sort(inPlace: boolean = false): TimeIntervalContainer {\n    const newRanges: TimeInterval[] = this._ranges.sort((a, b) => {\n      return a.start - b.start;\n    })\n\n    if (inPlace) {\n      this._ranges = newRanges;\n      return this;\n    } else {\n      return new TimeIntervalContainer(newRanges);\n    }\n  }\n\n  /**\n   * Cross-checks every range in this container with the ranges in other containers for overlaps.\n   * Early-returns as soon as the first overlap is found.\n   * @param ranges\n   * @returns true if any range from this overlaps with a range from that\n   */\n  hasOverlappingRangesWith(ranges: TimeIntervalContainer): boolean {\n    const thisFlat: TimeInterval[] = this.flatten().ranges;\n    const otherFlat: TimeInterval[] = ranges.flatten().ranges;\n\n    for (let i=0; i < thisFlat.length; i++) {\n      for (let k=0; k < otherFlat.length; k++) {\n        if (thisFlat[i].overlapsWith(otherFlat[k])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Checks one value against all intervals in this\n   * @param value\n   */\n  hasIntervalsWith(value: number): boolean {\n    const thisFlat: TimeInterval[] = this.flatten().ranges;\n\n    for (let i=0; i < thisFlat.length; i++) {\n      if (thisFlat[i].compareInterval(value)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getEarliestRange(): TimeInterval {\n    if (this._ranges.length === 0) {\n      return null;\n    }\n    return this.sort().ranges[0];\n  }\n\n  /**\n   * @returns duration as sum of all interval durations. will be equal to window duration\n   * if the media is gapless and has no time-plane discontinuities.\n   */\n  getCumulatedDuration(): number {\n    return this._ranges.reduce((accu: number, range: TimeInterval) => {\n      return accu + range.duration\n    }, 0)\n  }\n\n  /**\n   * @returns duration as difference between last interval end and first interval start\n   */\n  getWindowDuration(): number {\n    if (!this._ranges.length) {\n      return 0;\n    }\n\n    const duration = this._ranges[this._ranges.length -1].end - this._ranges[0].start;\n    if (duration <= 0) {\n      throw new Error('Window-duration should be larger than zero');\n    }\n\n    return duration;\n  }\n\n  toTimeRanges(): TimeRanges {\n    // FIXME:\n    throw new Error('Not implemented')\n  }\n\n  /**\n   * For compatibility with HTML5 native TimeRanges object,\n   * converts them internally to TimeInterval for each element in TimeRanges container.\n   * @param ranges HTML5 TimeRanges object\n   */\n  addTimeRanges(ranges: TimeRanges) {\n    for (let i=0; i < ranges.length; i++) {\n      this.add(new TimeInterval(\n        ranges.start(i),\n        ranges.end(i)\n      ))\n    }\n  }\n}\n","export class TimeScale {\n  constructor(private _base: number = 1) {}\n\n  get scale(): number {\n    return 1 / this._base;\n  }\n\n  get base(): number {\n    return this._base;\n  }\n\n  normalize(value): number {\n    return value * this._base;\n  }\n\n  denormalize(normalValue: number) {\n    return normalValue / this._base;\n  }\n}\n\nexport function toNormalizedFromTimebase(value: number, base: number) {\n  return value * base;\n}\n\nexport function toTimebaseFromNormal(value: number, base: number) {\n  return value / base;\n}\n\nexport function toNormalizedFromTimescale(value: number, scale: number) {\n  return toNormalizedFromTimebase(value, 1 / scale);\n}\n\nexport function toTimescaleFromNormal(value: number, scale: number) {\n  return toTimebaseFromNormal(value, 1 / scale);\n}\n\nexport function toSecondsFromMillis(millis) {\n  return toNormalizedFromTimebase(millis, 1/1000)\n}\n\nexport function toMillsFromSeconds(seconds) {\n  return toTimebaseFromNormal(seconds, 1/1000);\n}\n\nexport function toSecondsFromMicros(millis) {\n  return toNormalizedFromTimebase(millis, 1/1000000)\n}\n\nexport function toSecondsFromNanos(millis) {\n  return toNormalizedFromTimebase(millis, 1/1000000000)\n}\n\n\n","\n// We may extend our own container classes with a few of these methods\n// @see https://github.com/tjenkinson/url-toolkit\nimport {\n  buildAbsoluteURL,\n  buildURLFromParts,\n  normalizePath,\n  parseURL\n} from 'url-toolkit'\n\n/**\n * Idea is to extend from the URL W3C standard interface\n * (i.e implement it where not supported natively)\n * @see https://developer.mozilla.org/en-US/docs/Web/API/URL\n * @see https://www.npmjs.com/package/url-polyfill (relying on this for now as implementation shim)\n */\n/*\nexport class URLObject extends URL {\n  constructor(uri: string, base: string = null) {\n    super(uri, base || undefined)\n  }\n}\n*/\n\nexport function resolveUri(relativeUri: string, baseUri: string): string {\n\n  //console.log('resolveUri:', relativeUri, baseUri);\n\n  if (!baseUri) {\n    return relativeUri\n  }\n\n  const resolvedUrl = buildAbsoluteURL(baseUri, relativeUri, {\n    alwaysNormalize: true\n  });\n\n  //console.log(resolvedUrl);\n\n  return resolvedUrl;\n}\n\n\n\n\n\n","/**\n * @author Stephan Hesse <disparat@gmail.com>\n * @module xhr An improvement over the standard XMLHttpRequest API (and with type-safety :)\n *\n * For usage in a Node.js base env (like ts-node) @see https://www.npmjs.com/package/node-http-xhr\n *\n */\n\nimport {ByteRange} from './byte-range'\n\nimport {getLogger} from './logger'\nimport { IResourceRequest } from './resource-request';\n\nimport {utf8StringToArray, utf8BytesToString} from './bytes-read-write';\n\nconst {\n  log\n} = getLogger('xhr')\n\nconst PROGRESS_UPDATES_ENABLED = true\n\nconst createXHRHeadersMapFromString = function(rawHeaders: string): object {\n  const arr = rawHeaders.trim().split(/[\\r\\n]+/);\n  // create an object without a prototype (a plain vanilla \"dictionary\")\n  const map = Object.create(null);\n  arr.forEach(function (line) {\n    const parts = line.split(': ');\n    const header = parts.shift();\n    const value = parts.join(': ');\n    map[header] = value;\n  });\n  return map\n}\n\nexport type XHRHeader = [string, string]\n\nexport type XHRHeaders = XHRHeader[]\n\nexport type XHRData = ArrayBuffer | Blob | Document | string | FormData | null\n\nexport enum XHRMethod {\n  GET = 'GET',\n  POST = 'POST',\n  PUT = 'PUT',\n  DELETE = 'DELETE',\n  OPTIONS = 'OPTIONS',\n  HEAD = 'HEAD'\n}\n\nexport enum XHRResponseType {\n  VOID = \"\", //\tDOMString (this is the default value)\n  ARRAY_BUFFER = \"arraybuffer\", //\tArrayBuffer\n  BLOB = \"blob\", //\tBlob\n  DOCUMENT = \"document\", //\tDocument\n  JSON = \"json\", //\tJSON\n  TEXT = \"text\" //\tDOMString\n}\n\nexport enum XHRState {\n  UNSENT = XMLHttpRequest.UNSENT || 0,\n  OPENED = XMLHttpRequest.OPENED || 1,\n  HEADERS_RECEIVED = XMLHttpRequest.HEADERS_RECEIVED || 2,\n  LOADING = XMLHttpRequest.LOADING || 3,\n  DONE = XMLHttpRequest.DONE || 4\n}\n\nexport enum XHRStatusCategory {\n  VOID = 'void',\n  INFO = 'info',\n  SUCCESS = 'success',\n  REDIRECT = 'redirect',\n  REQUEST_ERROR = 'request_error',\n  SERVER_ERROR = 'server_error',\n  CUSTOME_SERVER_ERROR = 'custom_server_error'\n}\n\nexport type XHRCallbackFunction = (xhr: XHR, isProgressUpdate: boolean) => void\n\n/**\n *\n * Thin wrapper to keep state of one XHR.\n *\n * This class allows to perform requests, deal with their outcome and intermediate states.\n *\n * Requests are being sent out directly on construction (there is no state in between creating and sending a request).\n *\n * Any state change is signaled via the one callback function passed on construction.\n *\n * Request `xhrState` and HTTP `status` can be read via the respective instance properties.\n *\n * Check the values from within your callback.\n *\n * Same goes for response headers and body data, or eventual errors or abortion flags.\n *\n * The object is not recycleable (lives only for one single request, does not care about retrying and such).\n *\n * @class\n * @constructor\n */\nexport class XHR implements IResourceRequest {\n\n  private _xhrCallback: XHRCallbackFunction\n  private _xhr: XMLHttpRequest\n  private _responseHeadersMap: object = null\n  private _error: Error = null\n  private _state: XHRState = XHRState.UNSENT\n  private _aborted: boolean = false\n  private _loadedBytes: number = 0\n  private _totalBytes: number = 0\n  private _progressUpdatesEnabled: boolean = PROGRESS_UPDATES_ENABLED\n\n  private _createdAt: Date;\n  private _timeUntilHeaders: number = NaN;\n  private _timeUntilLoading: number = NaN;\n  private _timeUntilDone: number = NaN;\n\n  /**\n   * Enables \"Content-Range\" request header from given `ByteRange` object in constructor\n   */\n  public enableContentRange: boolean = false;\n  public encodeStringsToUtf8Buffer: boolean = false;\n\n  constructor(\n    url: string,\n    xhrCallback: XHRCallbackFunction = () => {},\n    method: XHRMethod = XHRMethod.GET,\n    responseType: XHRResponseType = XHRResponseType.VOID,\n    byteRange: ByteRange = null,\n    headers: XHRHeaders = null,\n    data: XHRData = null,\n    withCredentials: boolean = false,\n    timeout: number = 0,\n    forceXMLMimeType: boolean = false\n  ) {\n\n    this._createdAt = new Date()\n    this._xhrCallback = xhrCallback\n\n    const xhr = this._xhr = new XMLHttpRequest()\n\n    xhr.open(method, url, true);\n    xhr.responseType = responseType;\n    xhr.onreadystatechange = this.onReadyStateChange.bind(this)\n    xhr.onerror = this.onError.bind(this)\n    xhr.onabort = this.onAbort.bind(this)\n    xhr.onprogress = this.onProgress.bind(this)\n\n    if (byteRange) {\n      //log('set byte-range:', byteRange.toHttpHeaderValue(), byteRange.toString())\n      if (this.enableContentRange) {\n        xhr.setRequestHeader('Content-Range', byteRange.toHttpHeaderValue(true))\n      }\n      xhr.setRequestHeader('Range', byteRange.toHttpHeaderValue(false))\n    }\n\n    if (headers) {\n      headers.forEach(([header, value]) => {\n        xhr.setRequestHeader(header, value)\n      })\n    }\n\n    if (data === null) {\n      data = undefined\n    }\n\n    xhr.timeout = timeout\n\n    xhr.withCredentials = withCredentials\n\n    if (forceXMLMimeType) {\n      xhr.overrideMimeType('text/xml');\n    }\n\n    xhr.send(data)\n  }\n\n  setProgressUpdatesEnabled(enabled: boolean) {\n    this._progressUpdatesEnabled = enabled\n  }\n\n  get isInfo(): boolean {\n    return this._xhr.status >= 100 && this._xhr.status <= 199\n  }\n\n  /**\n   * @returns {boolean} Returns `true` when request status code is in range [200-299] (success)\n   */\n  get isSuccess(): boolean {\n    return this._xhr.status >= 200 && this._xhr.status <= 299\n  }\n\n  /**\n   * @returns {boolean} Returns `true` when request status code is signaling redirection\n   */\n  get isRedirect(): boolean {\n    return this._xhr.status >= 300 && this._xhr.status <= 399\n  }\n\n  get isRequestError(): boolean {\n    return this._xhr.status >= 400 && this._xhr.status <= 499\n  }\n\n  get isServerError(): boolean {\n    return this._xhr.status >= 500 && this._xhr.status <= 599\n  }\n\n  get isCustomServerError(): boolean {\n    return this._xhr.status >= 900 && this._xhr.status <= 999\n  }\n\n  get isContentRange(): boolean {\n    return this._xhr.status === 206\n  }\n\n  get isVoidStatus(): boolean {\n    return this._xhr.status === 0\n  }\n\n  getStatusCategory(): XHRStatusCategory {\n    if (this.isInfo) {\n      return XHRStatusCategory.INFO\n    }\n    if (this.isSuccess) {\n      return XHRStatusCategory.SUCCESS\n    }\n    if (this.isRedirect) {\n      return XHRStatusCategory.REDIRECT\n    }\n    if (this.isRequestError) {\n      return XHRStatusCategory.REQUEST_ERROR\n    }\n    if (this.isServerError) {\n      return XHRStatusCategory.SERVER_ERROR\n    }\n    if (this.isCustomServerError) {\n      return XHRStatusCategory.SERVER_ERROR\n    }\n    return XHRStatusCategory.VOID\n  }\n\n  get error(): Error {\n    return this._error\n  }\n\n  /**\n   * Native Upload object\n   * @readonly\n   */\n  get upload(): XMLHttpRequestUpload {\n    return this._xhr.upload\n  }\n\n  /**\n   * Native XHR object\n   * @readonly\n   */\n  get xhr(): XMLHttpRequest {\n    return this._xhr\n  }\n\n  get xhrState(): XHRState {\n    return this._state\n  }\n\n  get status(): number {\n    return this._xhr.status\n  }\n\n  get statusText(): string {\n    return this._xhr.statusText\n  }\n\n  get responseHeaders(): object {\n    return this._responseHeadersMap\n  }\n\n  get responseType(): XHRResponseType {\n    switch(this._xhr.responseType) {\n    case 'arraybuffer': return XHRResponseType.ARRAY_BUFFER;\n    case 'blob': return XHRResponseType.BLOB;\n    case 'document': return XHRResponseType.DOCUMENT;\n    case 'json': return XHRResponseType.JSON;\n    case '':\n    case 'text': return XHRResponseType.TEXT;\n    }\n\n    throw new Error('No mapping for XHR response type: ' + this._xhr.responseType);\n    /*\n    console.error('No mapping for XHR response type: ' + this._xhr.responseType);\n    return XHRResponseType.TEXT;\n    */\n  }\n\n  get responseData(): XHRData {\n    if (this._xhr.responseType === 'text') {\n      if (this.encodeStringsToUtf8Buffer) {\n        return utf8StringToArray(this.responseText);\n      } else {\n        return this.responseText;\n      }\n    }\n    return this._xhr.response\n  }\n\n  get responseText(): string {\n    // when the response is not text and we call on the property, native XHR crashes\n    try {\n      return this._xhr.responseText\n    } catch(invalidStateError) {\n      return null;\n    }\n  }\n\n  get responseDocument(): Document {\n    return this._xhr.responseXML\n  }\n\n  get responseURL(): string {\n    return this._xhr.responseURL\n  }\n\n  get hasBeenAborted(): boolean {\n    return this._aborted\n  }\n\n  get hasErrored(): boolean {\n    return !! this._error\n  }\n\n  get loadedBytes() {\n    return this._loadedBytes\n  }\n\n  get totalBytes() {\n    return this._totalBytes\n  }\n\n  get secondsUntilHeaders() {\n    return this._timeUntilHeaders\n  }\n\n  get secondsUntilLoading() {\n    return this._timeUntilLoading\n  }\n\n  get secondsUntilDone() {\n    return this._timeUntilDone\n  }\n\n  /**\n   * @returns {number}\n   */\n  get loadedFraction() {\n    return this._loadedBytes / this._totalBytes\n  }\n\n  getSecondsSinceCreated() {\n    return (new Date().getTime() - this._createdAt.getTime()) / 1000\n  }\n\n  abort() {\n    this._xhr.abort()\n  }\n\n  wasSuccessful(): boolean {\n    return this.getStatusCategory() === XHRStatusCategory.SUCCESS;\n  }\n\n  private onReadyStateChange() {\n\n    const xhr = this._xhr\n\n    this._state = xhr.readyState\n\n    switch(xhr.readyState) {\n    case XMLHttpRequest.UNSENT:\n      break;\n    case XMLHttpRequest.OPENED:\n      break;\n    case XMLHttpRequest.HEADERS_RECEIVED:\n      this._timeUntilHeaders = this.getSecondsSinceCreated()\n\n      const headers = xhr.getAllResponseHeaders()\n      this._responseHeadersMap = createXHRHeadersMapFromString(headers)\n      break;\n    case XMLHttpRequest.LOADING:\n      this._timeUntilLoading = this.getSecondsSinceCreated()\n      break;\n    case XMLHttpRequest.DONE:\n      this._timeUntilDone = this.getSecondsSinceCreated()\n      break;\n    }\n\n    this._xhrCallback(this, false)\n  }\n\n  private onError(event: ErrorEvent) {\n    this._error = event.error\n\n    this._xhrCallback(this, false)\n  }\n\n  private onAbort(event: Event) {\n    this._aborted = true\n\n    this._xhrCallback(this, false)\n  }\n\n  private onProgress(event: ProgressEvent) {\n    this._loadedBytes = event.loaded\n    this._totalBytes = event.total\n\n    if (this._progressUpdatesEnabled) {\n      this._xhrCallback(this, true)\n    }\n  }\n}\n","'use strict';\n\n/**\n * Node.js `XMLHttpRequest` implementation using `http.request()`.\n *\n * @module node-http-xhr\n * @author Stan Zhang <stan.zhang2@gmail.com>\n */\n\nvar url = require('url');\nvar http = require('http');\nvar https = require('https');\n\nvar NodeXHREventTarget = require('./node-xhr-event-target');\n\n/**\n * Currently-supported response types.\n *\n * @private\n * @readonly\n * @type {Object<String, Boolean>}\n */\nvar supportedResponseTypes = Object.freeze({\n  /** Text response (implicit) */\n  '': true,\n  /** Text response */\n  'text': true,\n  /** Binary-data response */\n  'arraybuffer': true,\n  /** JSON response */\n  'json': true\n});\n\n/**\n * Makes a request using either `http.request` or `https.request`, depending\n * on the value of `opts.protocol`.\n *\n * @private\n * @param {Object} opts - Options for the request.\n * @param {Function} cb - Callback for request.\n * @returns {ClientRequest} The request.\n */\nfunction makeRequest(opts, cb) {\n  if (opts.protocol === 'http:') {\n    return http.request(opts, cb);\n  } else if (opts.protocol === 'https:') {\n    return https.request(opts, cb);\n  }\n\n  throw new Error('Unsupported protocol \"' + opts.protcol + '\"');\n}\n\n/**\n * Creates a new `XMLHttpRequest`.\n *\n * @classdesc A wrapper around `http.request` that attempts to emulate the\n * `XMLHttpRequest` API.\n *\n * NOTE: Currently, some features are lacking:\n * - Some ProgressAPI events (`loadstart`, `loadend`, `progress`)\n * - `responseType` values other than '' or 'text' and corresponding parsing\n *   - As a result of the above, `overrideMimeType()` isn't very useful\n * - `setRequestHeader()` doesn't check for forbidden headers.\n * - `withCredentials` is defined as an instance property, but doesn't do\n *   anything since there's no use case for CORS-like requests in `node.js`\n *   right now.\n *\n * See {@link\n * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n * `XMLHttpRequest` on MDN\n * } for more details.\n *\n * @class\n * @extends module:node-xhr-event-target\n */\nmodule.exports = function () {\n  NodeXHREventTarget.call(this);\n\n  /**\n   * Current ready state.\n   *\n   * @private\n   */\n  this._readyState = this.UNSENT;\n\n  /**\n   * MIME type to use instead of the type specified by the response, or `null`\n   * to use the response MIME type.\n   *\n   * @type {?String}\n   * @private\n   */\n  this._mimetype = null;\n\n  /**\n   * Options for `http.request`.\n   *\n   * @see {@link\n   * https://nodejs.org/dist/latest/docs/api/http.html\n   * node.js `http` docs\n   * }\n   * @private\n   * @type {Object}\n   */\n  this._reqOpts = {\n    timeout: 0,\n    headers: {}\n  };\n\n  /**\n   * The request (instance of `http.ClientRequest`), or `null` if the request\n   * hasn't been sent.\n   *\n   * @private\n   * @type {?http.ClientRequest}\n   */\n  this._req = null;\n\n  /**\n   * The response (instance of `http.IncomingMessage`), or `null` if the\n   * response has not arrived yet.\n   *\n   * @private\n   * @type {?http.IncomingMessage}\n   */\n  this._resp = null;\n\n  /**\n   * The type of the response. Currently, only `''` and `'text'` are\n   * supported, which both indicate the response should be a `String`.\n   *\n   * @private\n   * @type {String}\n   * @default ''\n   */\n  this._responseType = '';\n\n  /**\n   * The current response text, or `null` if the request hasn't been sent or\n   * was unsuccessful.\n   *\n   * @private\n   * @type {?String}\n   */\n  this._responseText = null;\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/response\n   *\n   * @private\n   * @type {ArrayBuffer | String | Object}\n   */\n  this._response = null;\n};\n\n/** @alias module:node-http-xhr */\nvar NodeHttpXHR = module.exports;\n\n//\n// Set up public API\n//\nNodeHttpXHR.prototype = Object.create(\n  NodeXHREventTarget.prototype,\n  /** @lends module:node-http-xhr.prototype */\n  {\n    /**\n     * Ready state indicating the request has been created, but `open()` has not\n     * been called yet.\n     *\n     * @type {Number}\n     * @default 0\n     * @readonly\n     */\n    UNSENT: { value: 0 },\n    /**\n     * Ready state indicating that `open()` has been called, but the headers\n     * have not been received yet.\n     *\n     * @type {Number}\n     * @default 1\n     * @readonly\n     */\n    OPENED: { value: 1 },\n    /**\n     * Ready state indicating that `send()` has been called and the response\n     * headers have been received.\n     *\n     * @type {Number}\n     * @default 2\n     * @readonly\n     */\n    HEADERS_RECEIVED: { value: 2 },\n    /**\n     * Ready state indicating that the response body is being loaded.\n     *\n     * @type {Number}\n     * @default 3\n     * @readonly\n     */\n    LOADING: { value: 3 },\n    /**\n     * Ready state indicating that the response has completed, or the request\n     * was aborted/encountered an error.\n     *\n     * @type {Number}\n     * @default 4\n     * @readonly\n     */\n    DONE: { value: 4 },\n    /**\n     * The current ready state.\n     *\n     * @type {Number}\n     * @readonly\n     */\n    readyState: {\n      get: function getReadyState() { return this._readyState; }\n    },\n    /**\n     * The status code for the response, or `0` if the response headers have\n     * not been received yet.\n     *\n     * @type {Number}\n     * @example 200\n     * @readonly\n     */\n    status: {\n      get: function getStatus() {\n        if (!this._resp) {\n          return 0;\n        }\n\n        return this._resp.statusCode;\n      }\n    },\n    /**\n     * The status text for the response, or `''` if the response headers have\n     * not been received yet.\n     *\n     * @type {String}\n     * @example 'OK'\n     * @readonly\n     */\n    statusText: {\n      get: function getStatusText() {\n        if (!this._resp) {\n          return '';\n        }\n\n        return this._resp.statusMessage;\n      }\n    },\n    /**\n     * The timeout for the request, in milliseconds. `0` means no timeout.\n     *\n     * @type {Number}\n     * @default 0\n     */\n    timeout: {\n      get: function getTimeout() { return this._reqOpts.timeout; },\n      set: function setTimeout(timeout) {\n        this._reqOpts.timeout = timeout;\n        if (this._req) {\n          this._req.setTimeout(timeout);\n        }\n      }\n    },\n    /**\n     * The type of the response. Currently, only `''` and `'text'` are\n     * supported, which both indicate the response should be a `String`.\n     *\n     * @see {@link\n     * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseType\n     * `XMLHttpRequest.responseType` on MDN\n     * }\n     *\n     * @type {String}\n     * @default ''\n     */\n    responseType: {\n      get: function () { return this._responseType; },\n      set: function (responseType) {\n        if (!(responseType in supportedResponseTypes)) {\n          return;\n        }\n\n        this._responseType = responseType;\n      }\n    },\n    /**\n     * The response, encoded according to {@link\n     * module:node-http-xhr#responseType\n     * `responseType`\n     * }.\n     *\n     * If `send()` has not been called yet, this is `null`.\n     *\n     * If `responseType` is `''` or `'text'`, this is a `String` and will be\n     * be incomplete until the response actually finishes.\n     *\n     * @type {?*}\n     * @default ''\n     * @readonly\n     */\n    response: {\n      get: function getResponse() {\n        var type = this.responseType;\n        if (!(type in supportedResponseTypes)) {\n          throw new Error('Unsupported responseType \"' + type + '\"');\n        }\n\n        switch (type) {\n        case '':\n        case 'text':\n          return this._responseText;\n        case 'json':\n          return JSON.parse(this._responseText);\n        case 'arraybuffer':\n          return this._response.buffer;\n        default:\n          throw new Error('Assertion failed: unsupported response-type: ' + type);\n        }\n      }\n    },\n    /**\n     * The response body as a string.\n     *\n     * If `send()` has not been called yet, this is `null`.\n     *\n     * This will be incomplete until the response actually finishes.\n     *\n     * @type {?String}\n     * @throws when `response` not a String\n     * @readonly\n     */\n    responseText: {\n      get: function getResponseText() {\n\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseText#Exceptions\n        if (this._responseType !== 'text' && this._responseType !== '') {\n          throw new Error('InvalidStateError: Response-type is ' + this._responseType);\n        }\n\n        return this._responseText;\n      }\n    },\n    /**\n     * Indicates whether or not cross-site `Access-Control` requests should be\n     * made using credentials such as cookies, authorization headers, or TLS\n     * client certificates.\n     *\n     * This flag doesn't do anything at the moment because there isn't much of\n     * a use case for doing CORS-like requests in Node.js at the moment.\n     *\n     * @type {Boolean}\n     * @default false\n     */\n    withCredentials: { value: false, writable: true }\n  }\n);\n\n/**\n * Sets the ready state and emits the `readystatechange` event.\n *\n * @private\n * @param {Number} readyState - The new ready state.\n */\nNodeHttpXHR.prototype._setReadyState = function (readyState) {\n  this._readyState = readyState;\n  this.dispatchEvent({\n    type: 'readystatechange'\n  });\n};\n\n/**\n * Aborts the request if it has already been sent.\n */\nNodeHttpXHR.prototype.abort = function () {\n  if (this.readyState === this.UNSENT || this.readyState === this.DONE) {\n    return;\n  }\n\n  if (this._req) {\n    this._req.abort();\n  }\n};\n\n/**\n * Returns all the response headers, separated by CRLF, as a string.\n *\n * @returns {?String} The response headers, or `null` if no response yet.\n */\nNodeHttpXHR.prototype.getAllResponseHeaders = function () {\n  if (this.readyState < this.HEADERS_RECEIVED) {\n    return null;\n  }\n\n  var headers = this._resp.headers;\n  return Object.keys(headers).reduce(function (str, name) {\n    return str.concat(name + ': ' + headers[name] + '\\r\\n');\n  }, '');\n};\n\n/**\n * Returns the string containing the text of the specified header.\n *\n * @param {String} name - The header's name.\n * @returns {?String} The header's value, or `null` if no response yet or\n * the header does not exist in the response.\n */\nNodeHttpXHR.prototype.getResponseHeader = function (name) {\n  if (this.readyState < this.HEADERS_RECEIVED) {\n    return null;\n  }\n\n  return this._resp.headers[name.toLowerCase()] || null;\n};\n\n/**\n * Initializes a request.\n *\n * @param {String} method - The HTTP method to use.\n * @param {String} reqUrl - The URL to send the request to.\n * @param {Boolean} [async=true] - Whether or not the request is asynchronous.\n */\nNodeHttpXHR.prototype.open = function (method, reqUrl, async) {\n  if (async === false) {\n    throw new Error('Synchronous requests not implemented');\n  }\n\n  if (this._readyState > this.UNSENT) {\n    this.abort();\n    return;\n  }\n\n  var opts = this._reqOpts;\n  opts.method = method;\n\n  var urlObj = url.parse(reqUrl);\n  ['protocol', 'hostname', 'port', 'path'].forEach(function (key) {\n    if (key in urlObj) {\n      opts[key] = urlObj[key];\n    }\n  });\n\n  this._setReadyState(this.OPENED);\n};\n\n/**\n * Overrides the MIME type returned by the server.\n *\n * Must be called before `#send()`.\n *\n * @param {String} mimetype - The MIME type to use.\n */\nNodeHttpXHR.prototype.overrideMimeType = function (mimetype) {\n  if (this._req) {\n    throw new Error('overrideMimeType() called after send()');\n  }\n\n  this._mimetype = mimetype;\n};\n\n/**\n * Sets the value of a request header.\n *\n * Must be called before `#send()`.\n *\n * @param {String} header - The header's name.\n * @param {String} value - The header's value.\n */\nNodeHttpXHR.prototype.setRequestHeader = function (header, value) {\n  if (this.readyState < this.OPENED) {\n    throw new Error('setRequestHeader() called before open()');\n  }\n\n  if (this._req) {\n    throw new Error('setRequestHeader() called after send()');\n  }\n\n  this._reqOpts.headers[header] = value;\n};\n\n/**\n * Sends the request.\n *\n * @param {*} [data] - The request body.\n */\nNodeHttpXHR.prototype.send = function (data) {\n  var onAbort = function onAbort() {\n    this._setReadyState(this.DONE);\n\n    this.dispatchEvent({\n      type: 'abort'\n    });\n  }.bind(this);\n\n  var opts = this._reqOpts;\n  var req = makeRequest(opts, function onResponse(resp) {\n    this._resp = resp;\n    this._responseText = '';\n\n    // var contentType = resp.headers['content-type'];\n    // TODO: adjust responseType from content-type header if applicable\n\n    // from Node API docs: The encoding argument is optional and only applies when chunk is a string. Defaults to 'utf8'.\n    if (this._responseType === 'text' || this._responseType === '') {\n      resp.setEncoding('utf8');\n    }\n\n    resp.on('data', function onData(chunk) {\n\n      if (typeof chunk === 'string') {\n        this._responseText += chunk;\n      } else if (typeof chunk === 'object') {\n        if (!(chunk instanceof Buffer)) {\n          throw new Error('Assertion failed: Response-data should be of `Buffer` type');\n        }\n        if (this._response) {\n          this._response = Buffer.concat([this._response, chunk]);\n        } else {\n          this._response = chunk;\n        }\n      }\n\n      if (this.readyState !== this.LOADING) {\n        this._setReadyState(this.LOADING);\n      }\n\n    }.bind(this));\n\n    resp.on('end', function onEnd() {\n      this._setReadyState(this.DONE);\n      this.dispatchEvent({\n        type: 'load'\n      });\n    }.bind(this));\n\n    this._setReadyState(this.HEADERS_RECEIVED);\n  }.bind(this));\n\n  // Passing `opts.timeout` doesn't actually seem to set the timeout sometimes,\n  // so it is set manually here.\n  req.setTimeout(opts.timeout);\n\n  req.on('abort', onAbort);\n  req.on('aborted', onAbort);\n\n  req.on('timeout', function onTimeout() {\n    this._setReadyState(this.DONE);\n    this.dispatchEvent({\n      type: 'timeout'\n    });\n  }.bind(this));\n\n  req.on('error', function onError(err) {\n    if (this._listenerCount('error') < 1) {\n      // Uncaught error; throw something more meaningful\n      throw err;\n    }\n\n    // Dispatch an error event. The specification does not provide for any way\n    // to communicate the failure reason with the event object.\n    this.dispatchEvent({\n      type: 'error'\n    });\n\n    this._setReadyState(this.DONE);\n  }.bind(this));\n\n  if (data) {\n    req.write(data);\n  }\n  req.end();\n\n  this._req = req;\n};\n\n","'use strict';\n\n/**\n * Node.js `EventTarget` implementation using Node's `EventEmitter`.\n *\n * @module node-event-target\n * @author Stan Zhang <stan.zhang2@gmail.com>\n */\n\nvar EventEmitter = require('events').EventEmitter;\n\n/**\n * Creates a new `EventTarget`.\n *\n * @classdesc The interface implemented by objects that can receive events and\n * may have listeners for them.\n *\n * See {@link\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n * `EventTarget` on MDN\n * } for more details.\n *\n * @class\n */\nmodule.exports = function () {\n  EventEmitter.call(this);\n};\n\n/** @alias module:node-event-target */\nvar EventTarget = module.exports;\n\n//\n// Inherit some EventEmitter functions as private functions\n//\n['on', 'removeListener', 'emit', 'listeners'].forEach(function (key) {\n  Object.defineProperty(EventTarget.prototype, '_' + key, {\n    value: EventEmitter.prototype[key]\n  });\n});\n\nObject.defineProperty(EventTarget.prototype, '_listenerCount', {\n  value: 'listenerCount' in EventEmitter.prototype\n  ? EventEmitter.prototype.listenerCount\n  // Shim `EventEmitter#listenerCount` support\n  : function (event) {\n    return this._listeners(event).length;\n  }\n});\n\n//\n// Wrap the event listener methods so that the `EventEmitter` events are not\n// exposed.\n//\n\n/**\n * Adds an event listener.\n *\n * @see {@link\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * `EventTarget.addEventListener` on MDN\n * }\n * @param {String} type - The event type.\n * @param {Function} listener - The callback.\n * @param {Object} [options] - Options for the listener.\n * @param {Boolean} [options.once=false] - Invoke listener once.\n */\nEventTarget.prototype.addEventListener = function (type, listener, options) {\n  // Re-implement `#once()` behavior\n  // This is necessary because the built-in `#once()` calls functions that we've\n  // renamed on the prototype.\n  var fired = false;\n\n  /** @this NodeHttpXHR */\n  function onceListener() {\n    this._removeListener(type, onceListener);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  this._on(type, options && options.once\n    ? onceListener\n    : listener\n  );\n};\n\n/**\n * Removes an event listener.\n *\n * @see {@link\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * `EventTarget.removeEventListener` on MDN\n * }\n * @param {String} type - The event type.\n * @param {Function} listener - The callback.\n */\nEventTarget.prototype.removeEventListener = function (type, listener) {\n  this._removeListener(type, listener);\n};\n\n/**\n * Dispatches an event.\n *\n * @see {@link\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent\n * `EventTarget.dispatchEvent` on MDN\n * }\n * @param {Object} event - The event to dispatch.\n */\nEventTarget.prototype.dispatchEvent = function (event) {\n  event.target = this;\n  this._emit(event.type, event);\n};\n\n","'use strict';\n\n/**\n * Node.js `XMLHttpRequestEventTarget` implementation.\n *\n * @module node-xhr-event-target\n * @author Stan Zhang <stan.zhang2@gmail.com>\n */\n\nvar EventTarget = require('./node-event-target');\n\nvar events = [\n  /**\n   * The {@link\n   * module:node-http-xhr#readyState\n   * `readyState`\n   * } changed.\n   *\n   * @event module:node-xhr-event-target#readystatechange\n   */\n  'readystatechange',\n  /**\n   * The request was aborted.\n   *\n   * @event module:node-xhr-event-target#abort\n   */\n  'abort',\n  /**\n   * An error was encountered.\n   *\n   * @event module:node-xhr-event-target#error\n   * @type {Error}\n  */\n  'error',\n  /**\n   * The request timed out.\n   *\n   * @event module:node-xhr-event-target#timeout\n   */\n  'timeout',\n  /**\n   * The response finished loading.\n   *\n   * @event module:node-xhr-event-target#load\n   */\n  'load'\n];\n\n/**\n * Creates a new `XMLHttpRequestEventTarget`.\n *\n * @classdesc The interface that describes the event handlers for an\n * `XMLHttpRequest`.\n *\n * NOTE: Currently, some features are lacking:\n * - Some ProgressAPI events (`loadstart`, `loadend`, `progress`)\n *\n * See {@link\n * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget\n * `XMLHttpRequestEventTarget` on MDN\n * } for more details.\n *\n * @class\n * @extends module:node-event-target\n */\nmodule.exports = function () {\n  EventTarget.call(this);\n\n  var props = {};\n\n  // Add private event handler properties\n  events.forEach(function (type) {\n    props['_on' + type] = { value: null, writable: true };\n  });\n\n  Object.defineProperties(this, props);\n};\n\n/** @alias module:node-xhr-event-target */\nvar NodeXHREventTarget = module.exports;\n\nvar protoProps = {};\n\n//\n// Set up event handler properties\n//\nevents.forEach(function (type) {\n  var key = 'on' + type;\n  protoProps[key] = {\n    get: function getHandler() { return this['_' + key]; },\n    set: function setHandler(handler) {\n      if (typeof handler === 'function') {\n        this.addEventListener(type, handler);\n        this['_' + key] = handler;\n      } else {\n        var old = this['_' + key];\n        if (old) {\n          this.removeEventListener(type, old);\n        }\n\n        this['_' + key] = null;\n      }\n    }\n  };\n});\n\nNodeXHREventTarget.prototype = Object.create(\n  EventTarget.prototype, protoProps\n);\n\n","/**\n * Copyright 2018 Novage LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst SMOOTHING_INTERVAL = 4 * 1000;\nconst MEASURE_INTERVAL = 60 * 1000;\n\nclass NumberWithTime {\n    constructor (readonly value: number, readonly timeStamp: number) {}\n}\n\nexport class BandwidthEstimator {\n    private lastBytes: NumberWithTime[] = [];\n    private currentBytesSum = 0;\n    private lastSpeed: NumberWithTime[] = [];\n\n    public addBytes(bytes: number, timeStamp: number): void {\n        this.lastBytes.push(new NumberWithTime(bytes, timeStamp));\n        this.currentBytesSum += bytes;\n\n        while (timeStamp - this.lastBytes[0].timeStamp > SMOOTHING_INTERVAL) {\n            this.currentBytesSum -= this.lastBytes.shift()!.value;\n        }\n\n        this.lastSpeed.push(new NumberWithTime(this.currentBytesSum / SMOOTHING_INTERVAL, timeStamp));\n    }\n\n    // in bytes per millisecond (SH: kbyte/s ..? :))\n    public getSpeed(timeStamp: number): number {\n        while (this.lastSpeed.length != 0 && timeStamp - this.lastSpeed[0].timeStamp > MEASURE_INTERVAL) {\n            this.lastSpeed.shift();\n        }\n\n        let maxSpeed = 0;\n        for (const speed of this.lastSpeed) {\n            if (speed.value > maxSpeed) {\n                maxSpeed = speed.value;\n            }\n        }\n\n        return maxSpeed;\n    }\n}\n","/**\n * Copyright 2018 Novage LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as Debug from 'debug';\n\nimport {EventEmitter} from 'eventemitter3';\nimport {HttpDownloadQueue} from './http-download-queue';\nimport {PeerAgent} from './peer-agent';\nimport {BandwidthEstimator} from './bandwidth-estimator';\nimport { PeerTransportFilterFactory, DefaultPeerTransportFilter } from './peer-transport';\n\nimport { BKResource, BKResourceMapData, BKResourceStatus } from './bk-resource';\n\nimport { getPerfNow } from './perf-now';\nimport { Peer } from './peer';\n\nconst getBrowserRtc = require('get-browser-rtc');\n\nconst rtcDefaultConfig: RTCConfiguration = require('simple-peer').config;\n\nconst trackerDefaultAnounce = [\n    'wss://tracker.btorrent.xyz/',\n    'wss://tracker.openwebtorrent.com/'\n];\n\nexport type BKAccessProxySettings = {\n    /**\n     * Max WebRTC message size. 64KiB - 1B should work with most of recent browsers. Set it to 16KiB for older browsers support.\n     */\n    webRtcMaxMessageSize: number;\n\n    /**\n     * Timeout to download a segment from a peer. If exceeded the peer is dropped.\n     */\n    p2pSegmentDownloadTimeout: number;\n\n    /**\n     * Torrent trackers (announcers) to use.\n     */\n    trackerAnnounce: string[];\n\n    /**\n     * An RTCConfiguration dictionary providing options to configure WebRTC connections.\n     */\n    rtcConfig: RTCConfiguration;\n\n    /**\n     * Inject a factory function to create own transport interface implementation\n     * based on initial transport object create by ITrackerClient.\n     *\n     * Default: just returns the initial transport.\n     */\n    mediaPeerTransportFilterFactory: PeerTransportFilterFactory\n};\n\nexport type BKOptAccessProxySettings = Partial<BKAccessProxySettings>;\n\nexport const defaultSettings: BKAccessProxySettings = {\n\n    webRtcMaxMessageSize: 64 * 1024 - 1, // 64Kbytes (why the -1 ?)\n\n    p2pSegmentDownloadTimeout: 60000,\n\n    trackerAnnounce: trackerDefaultAnounce,\n\n    rtcConfig: rtcDefaultConfig,\n\n    //mediaPeerTransportFilterFactory: (transport) => transport\n    mediaPeerTransportFilterFactory: (transport) => new DefaultPeerTransportFilter(transport)\n};\n\nexport enum BKAccessProxyEvents {\n\n    ResourceRequested = 'resource:requested',\n\n    ResourceEnqueuedHttp = 'resource:enqueued:http',\n\n    ResourceEnqueuedP2p = 'resource:enqueued:p2p',\n\n    /**\n     * Emitted when segment has been downloaded.\n     * Args: segment\n     */\n    ResourceFetched = 'resource:fetched',\n\n    /**\n     * Emitted when an error occurred while loading the segment.\n     * Args: segment, error\n     */\n    ResourceError = 'resource:error',\n\n    /**\n     * Emitted for each segment that does not hit into a new segments queue when the load() method is called.\n     * Args: segment\n     */\n    ResourceAbort = 'resource:abort',\n\n    /**\n     * Emitted when a peer is connected.\n     * Args: peer\n     */\n    PeerConnect = 'peer:connect',\n\n    /**\n     * Emitted when a peer is disconnected.\n     * Args: peerId\n     */\n    PeerClose = 'peer:close',\n\n    PeerRequestReceived = 'peer:request',\n\n    PeerResponseSent = 'peer:response-sent',\n}\n\nexport interface BK_IProxy {\n    on(event: string | symbol, listener: (...args: any[]) => void): BK_IProxy;\n    once(event: string | symbol, listener: (...args: any[]) => void): BK_IProxy;\n    off(event: string | symbol, listener: (...args: any[]) => void): BK_IProxy;\n    enqueue(resource: BKResource): void;\n    abort(resource: BKResource): void;\n    terminate(): void;\n    getSwarmId();\n    setSwarmId(swarmId: string);\n    getPeerId(): string;\n    getPeerConnections(): Peer[];\n    getWRTCConfig(): RTCConfiguration;\n    readonly settings: BKAccessProxySettings;\n}\n\nexport class BKAccessProxy extends EventEmitter implements BK_IProxy {\n\n    public static isSupported(): boolean {\n        const browserRtc = getBrowserRtc();\n        return (browserRtc && (browserRtc.RTCPeerConnection.prototype.createDataChannel !== undefined));\n    }\n\n    readonly debug = Debug('bk:core:access-proxy');\n    readonly settings: BKAccessProxySettings;\n\n    private _httpDownloader: HttpDownloadQueue;\n    private _peerAgent: PeerAgent;\n    private _storedSegments: Map<string, BKResource> = new Map();\n    private _bandwidthEstimator = new BandwidthEstimator();\n\n    public constructor(settings: Partial<BKAccessProxySettings> = {}) {\n        super();\n\n        this.settings = Object.assign(defaultSettings, settings);\n        this.debug('loader settings', this.settings);\n\n        this._httpDownloader = new HttpDownloadQueue(\n            this.onResourceLoaded.bind(this),\n            this.onResourceError.bind(this)\n        );\n\n        //this._httpDownloader.on('bytes-downloaded', (bytes: number) => this.onChunkBytesDownloaded('http', bytes));\n\n        this._peerAgent = new PeerAgent(this._storedSegments, this.settings);\n\n        this._peerAgent.on('resource-fetched', this.onResourceLoaded.bind(this));\n        this._peerAgent.on('resource-error', this.onResourceError.bind(this));\n        this._peerAgent.on('bytes-downloaded', (bytes: number) => this.onChunkBytesDownloaded('p2p', bytes));\n        this._peerAgent.on('bytes-uploaded', (bytes: number) => this.onChunkBytesUploaded('p2p', bytes));\n\n        this._peerAgent.on('peer-connected', this.onPeerConnect.bind(this));\n        this._peerAgent.on('peer-closed', this.onPeerClose.bind(this));\n        this._peerAgent.on('peer-data-updated', this.onPeerDataUpdated.bind(this));\n        this._peerAgent.on('peer-request-received', this.onPeerRequestReceived.bind(this));\n        this._peerAgent.on('peer-response-sent', this.onPeerResponseSent.bind(this));\n    }\n\n    public enqueue(resource: BKResource): void {\n        this.debug('enqueueing:', resource.getUrl());\n\n        this.emit(BKAccessProxyEvents.ResourceRequested, resource);\n\n        // update Swarm ID\n        this._peerAgent.setSwarmId(resource.swarmId);\n\n        if (this._peerAgent.enqueue(resource)) {\n            this.debug('enqueued to p2p downloader');\n            this.emit(BKAccessProxyEvents.ResourceEnqueuedP2p, resource);\n        } else {\n            this.debug('falling back to http downloader');\n            this._httpDownloader.enqueue(resource);\n            this.emit(BKAccessProxyEvents.ResourceEnqueuedHttp, resource);\n        }\n    }\n\n    public abort(resource: BKResource) {\n        this._httpDownloader.abort(resource);\n    }\n\n    public setSwarmId(swarmId: string) {\n        this._peerAgent.setSwarmId(swarmId);\n    }\n\n    public getSwarmId(): string {\n        return this._peerAgent.getSwarmId();\n    }\n\n    public getPeerId(): string {\n        return this._peerAgent.getPeerId();\n    }\n\n    public getWRTCConfig(): RTCConfiguration {\n        return this.settings.rtcConfig;\n    }\n\n    public getPeerConnections(): Peer[] {\n        return this._peerAgent.getPeerConnections();\n    }\n\n    public terminate(): void {\n        this._httpDownloader.destroy();\n        this._peerAgent.destroy();\n        this._storedSegments.clear();\n    }\n\n    private _createSegmentsMap(): BKResourceMapData {\n        const segmentsMap: BKResourceMapData = [];\n        this._storedSegments.forEach((res) => segmentsMap.push([res.id, BKResourceStatus.Loaded]));\n        this._httpDownloader.getQueuedList().forEach((res: BKResource) => segmentsMap.push([res.id, BKResourceStatus.LoadingViaHttp]));\n        return segmentsMap;\n    }\n\n    // Event handlers\n\n    private onChunkBytesDownloaded (method: \"http\" | \"p2p\", bytes: number) {\n        this._bandwidthEstimator.addBytes(bytes, getPerfNow());\n    }\n\n    private onChunkBytesUploaded (method: \"p2p\", bytes: number) {\n        this._bandwidthEstimator.addBytes(bytes, getPerfNow());\n    }\n\n    private onResourceLoaded (segment: BKResource) {\n        this.debug('resource loaded', segment.id, segment.data);\n\n        if (!segment.data || segment.data.byteLength === 0) {\n            throw new Error('No data in resource loaded')\n        }\n\n        this._storedSegments.set(segment.id, segment);\n\n        segment.lastAccessedAt = getPerfNow();\n\n        this.emit(BKAccessProxyEvents.ResourceFetched, segment);\n\n        this._peerAgent.sendSegmentsMapToAll(this._createSegmentsMap());\n    }\n\n    private onResourceError (segment: BKResource, event: any) {\n        this.emit(BKAccessProxyEvents.ResourceError, segment, event);\n    }\n\n    private onPeerConnect (peer: {id: string}) {\n        this._peerAgent.sendSegmentsMap(peer.id, this._createSegmentsMap());\n        this.emit(BKAccessProxyEvents.PeerConnect, peer);\n    }\n\n    private onPeerClose (peerId: string) {\n        this.emit(BKAccessProxyEvents.PeerClose, peerId);\n    }\n\n    private onPeerDataUpdated () {\n        this.debug('peer data updated');\n    }\n\n    private onPeerRequestReceived(resource: BKResource, peer: Peer) {\n        if (resource) {\n            this.debug('peer request received resource', resource.id);\n        } else {\n            this.debug('peer request received for absent resource');\n        }\n        this.emit(BKAccessProxyEvents.PeerRequestReceived, resource, peer);\n    }\n\n    private onPeerResponseSent(resource: BKResource, peer: Peer) {\n        if (resource) {\n            this.debug('peer response sent for resource id:', resource.id);\n        } else {\n            this.debug('peer response sent with absent resource');\n        }\n        this.emit(BKAccessProxyEvents.PeerResponseSent, resource, peer);\n    }\n}\n","import * as Debug from 'debug';\n\nimport { IResourceRequest, ResourceRequestOptions, ResourceRequestCallback } from '../../ext-mod/emliri-es-libs/rialto/lib/resource-request';\nimport { XHRState, XHRData, XHR, XHRResponseType } from '../../ext-mod/emliri-es-libs/rialto/lib/xhr';\nimport { getPerfNow } from '../core/perf-now';\nimport { BKResource, BK_IProxy, BKProxyEvents } from '../core';\n\nconst debug = Debug('bk:engine:universal:resource-request');\n\nexport class BKResourceRequest implements IResourceRequest {\n\n    xhrState: XHRState = XHRState.UNSENT;\n\n    responseData: XHRData = null;\n    responseHeaders: object = {};\n    responseType: XHRResponseType;\n\n    loadedBytes: number = 0;\n    totalBytes: number = NaN;\n\n    hasBeenAborted: boolean = false;\n    hasErrored: boolean = false;\n\n    error: Error = null;\n\n    secondsUntilLoading: number = NaN;\n    secondsUntilDone: number = NaN;\n    secondsUntilHeaders: number = NaN;\n\n    private _resource: BKResource;\n\n    private _resourceRequestCallback: ResourceRequestCallback;\n    private _wasSuccessful: boolean = false;\n    private _requestCreated: number = null;\n\n    constructor(\n        private proxy: BK_IProxy,\n        private swarmId: string,\n        private url: string,\n        private options: ResourceRequestOptions = {}\n    ) {\n        debug(`new p2p media downloader request for ${url}`);\n\n        this.proxy.on(BKProxyEvents.ResourceFetched, this.onResourceLoaded.bind(this));\n        this.proxy.on(BKProxyEvents.ResourceError, this.onResourceError.bind(this));\n        this.proxy.on(BKProxyEvents.ResourceAbort, this.onResourceAbort.bind(this));\n\n        debug(`creating new p2p resource: ${url} with swarm-ID \"${swarmId}\"`);\n\n        const res: BKResource = this._resource = new BKResource(\n            url,\n            this.options.byteRange\n        );\n\n        res.swarmId = this.swarmId;\n\n        this.proxy.enqueue(res);\n\n        this._resourceRequestCallback = this.options.requestCallback;\n        this._requestCreated = getPerfNow();\n\n        this.responseType = XHRResponseType.ARRAY_BUFFER;\n    }\n\n    abort() {\n        this.hasBeenAborted = true;\n    }\n\n    wasSuccessful(): boolean  {\n        return this._wasSuccessful;\n    }\n\n    getResource(): BKResource {\n        return this._resource;\n    }\n\n    private _invokeRequestCallback() {\n        if (this._resourceRequestCallback) {\n            debug('invoke resource request callback');\n            this._resourceRequestCallback(this, false);\n        }\n    }\n\n    private onResourceLoaded(res: BKResource) {\n        if (res.id !== this._resource.id) {\n            return;\n        }\n\n        if (this.hasBeenAborted) {\n            return;\n        }\n\n        this._wasSuccessful = true;\n\n        this.xhrState = XHRState.DONE;\n\n        this.secondsUntilHeaders = 0;\n        this.secondsUntilDone = (getPerfNow() - this._requestCreated) / 1000;\n\n        this.secondsUntilLoading = this.secondsUntilDone;\n\n        this.loadedBytes = res.data.byteLength;\n        this.totalBytes = res.data.byteLength;\n        this.responseData = res.data;\n\n        debug(`segment loaded: ${this.url}`, res.getUrl());\n\n        this._invokeRequestCallback();\n    }\n\n    private onResourceError(segment: BKResource, err: Error) {\n        if (segment.id !== this._resource.id) {\n            return;\n        }\n\n        if (this.hasBeenAborted) {\n            return;\n        }\n\n        debug(`segment error: ${this.url}`);\n    }\n\n    private onResourceAbort(segment: BKResource) {\n        if (segment.id !== this._resource.id) {\n            return;\n        }\n\n        if (this.hasBeenAborted) {\n            return;\n        }\n\n        debug(`segment aborted: ${this.url}`);\n\n        this.hasBeenAborted = true;\n    }\n}\n","import { BKResourceRequest } from '../core/bk-resource-request';\nimport { ResourceEvents } from '../../ext-mod/emliri-es-libs/rialto/lib/resource';\nimport { BKResource } from '../core';\nimport { BKAccessProxyEvents, BK_IProxy } from '../core/bk-access-proxy';\nimport { Peer } from './peer';\n\nconst html = require('html-tag');\nconst domify = require('domify');\n\nabstract class BKResourceTransferView {\n    constructor(\n        protected _resource: BKResource\n    ) {}\n\n    readonly isUpload: boolean = false;\n    readonly isP2P: boolean = false;\n\n    getTxBytes(): number {\n        return this._resource.requestedBytesLoaded;\n    }\n\n    abstract getHTML(): string;\n}\n\nclass BKResourceUploadView extends BKResourceTransferView {\n\n    readonly isUpload: boolean = true;\n    readonly isP2P: boolean = true;\n\n    constructor(\n        _resource: BKResource,\n        private _peer: Peer,\n        private _monitor: BKResourceTransferMonitorDomView\n    ) {\n        super(_resource);\n    }\n\n    getHTML(): string {\n        const loaded = this._resource.requestedBytesLoaded;\n        const total = this._resource.requestedBytesTotal;\n        const txKbps = (8 * this._resource.requestedBytesLoaded\n                        / this._resource.fetchLatency) / 1000;\n\n        //console.log('fetch-latency', this._resource.fetchLatency);\n\n        return `<div class=\"resource-ul\">Direction: UPLOAD<br><span><label>URL:</label> ${this._resource.getUrl()}</span><br>\n            | <span><label>Peer</label>: ${ this._peer.id } / ${this._peer.remoteAddress}</span>\n            | <span>${ true ? 'P2P' : 'HTTP' }</span>\n            | <span><label>Transferred (bytes):</label> ${loaded} / ${total}</span></div>`;\n    }\n}\n\nclass BKResourceDownloadView extends BKResourceTransferView {\n\n    readonly isUpload: boolean = false;\n    readonly isP2P: boolean = false;\n\n    constructor(\n        resource: BKResource,\n        private _isP2p: boolean,\n        private _monitor: BKResourceTransferMonitorDomView\n    ) {\n\n        super(resource);\n\n        this.isP2P = _isP2p;\n\n        this._resource.on(ResourceEvents.FETCH_PROGRESS, () => {\n            this._onFetchProgress();\n        });\n\n        this._resource.on(ResourceEvents.FETCH_SUCCEEDED, () => {\n            this._onFetchSucceeded();\n        });\n\n        this._resource.on(ResourceEvents.BUFFER_SET, () => {\n            this._onFetchSucceeded();\n        });\n\n        this._resource.on(ResourceEvents.FETCH_ABORTED, () => {\n            this._onFetchAborted();\n        });\n\n        this._resource.on(ResourceEvents.FETCH_ERRORED, () => {\n            this._onFetchErrored();\n        });\n    }\n\n    getHTML(): string {\n\n        const loaded = this._resource.requestedBytesLoaded;\n        const total = this._resource.requestedBytesTotal;\n        const txKbps = (8 * this._resource.requestedBytesLoaded\n                        / this._resource.fetchLatency) / 1000;\n\n        //console.log('fetch-latency', this._resource.fetchLatency);\n\n        return `<div class=\"resource-dl\">\n                Direction: DOWNLOAD<br>\n                <span><label>URL:</label> ${this._resource.getUrl()}</span><br>\n                | <span>${ this._isP2p ? 'P2P' : 'HTTP' }</span>\n                | <span><label>Transferred (bytes):</label> ${loaded} / ${total}</span>\n                | <span><label>Bitrate (kbits/sec): </label> ${txKbps.toFixed(1)}</span></div>`;\n    }\n\n    private _onFetchProgress() {\n        this._monitor.update();\n    }\n\n    private _onFetchSucceeded() {\n        this._monitor.update();\n    }\n\n    private _onFetchErrored() {}\n\n    private _onFetchAborted() {}\n}\n\nexport class BKResourceTransferMonitorDomView {\n\n    private _resourceTransfers: BKResourceTransferView[] = [];\n    private _domRootEl: HTMLElement;\n\n    constructor(\n        private _proxy: BK_IProxy,\n        domRootId: string,\n    ) {\n        this._proxy.on(BKAccessProxyEvents.ResourceEnqueuedHttp, (res: BKResource) => {\n            this.addResourceDownload(res, false);\n        });\n\n        this._proxy.on(BKAccessProxyEvents.ResourceEnqueuedP2p, (res: BKResource) => {\n            this.addResourceDownload(res, true);\n        });\n\n        this._proxy.on(BKAccessProxyEvents.PeerResponseSent, (res: BKResource, peer: Peer) => {\n            this.addResourceUpload(res, peer);\n        });\n\n        this._domRootEl = document.getElementById(domRootId);\n        if (!this._domRootEl) {\n            throw new Error(`No root element found with id \"${domRootId}\"`);\n        }\n    }\n\n    addResourceDownload(res: BKResource, isP2p: boolean) {\n        this._resourceTransfers.push(new BKResourceDownloadView(res, isP2p, this));\n        this.update();\n    }\n\n    addResourceUpload(res: BKResource, peer: Peer) {\n        this._resourceTransfers.push(new BKResourceUploadView(res, peer, this));\n        this.update();\n    }\n\n    getOverallStats(): {\n        p2pDownloadRatio: number,\n        p2pUploadRatio: number,\n        cdnDownloadedBytes: number,\n        peerDownloadedBytes: number,\n        peerUploadedBytes: number\n    } {\n        let cdnDownloadedBytes = 0;\n        let peerDownloadedBytes = 0;\n        let peerUploadedBytes = 0;\n        let p2pDownloadRatio = 0;\n        let p2pUploadRatio = 0;\n\n        this._resourceTransfers.forEach((resourceTx: BKResourceTransferView) => {\n            if (resourceTx.isUpload) {\n                peerUploadedBytes += resourceTx.getTxBytes()\n            } else {\n                if (resourceTx.isP2P) {\n                    peerDownloadedBytes += resourceTx.getTxBytes();\n                } else {\n                    cdnDownloadedBytes += resourceTx.getTxBytes();\n                }\n            }\n        });\n\n        p2pDownloadRatio = Math.round(100 * peerDownloadedBytes / (cdnDownloadedBytes + peerDownloadedBytes)) / 100;\n\n        p2pUploadRatio = Math.round(100 * peerUploadedBytes / (cdnDownloadedBytes + peerDownloadedBytes)) / 100;\n\n        return {\n            p2pDownloadRatio,\n            p2pUploadRatio,\n            cdnDownloadedBytes,\n            peerDownloadedBytes,\n            peerUploadedBytes\n        }\n    }\n\n    update() {\n        // use JSX / React\n        const stats = this.getOverallStats();\n        let html = '';\n        html += `<div>\n            <label>Overall stats:</label><p><pre>${ JSON.stringify(stats, null, 2)  }</pre></p>\n        </div>`;\n        html += '<div>';\n        this._resourceTransfers.forEach((resourceTransfer: BKResourceDownloadView) => {\n            html += `<div class=\"resource-tx\"><i>RESOURCE TX STATS</i><p>${resourceTransfer.getHTML()}</p></div>`;\n            html += '<hr />';\n        });\n        html += '</div>';\n\n        this._domRootEl.innerHTML = '';\n        this._domRootEl.appendChild(domify(html));\n    }\n}\n","import { Resource } from '../../ext-mod/emliri-es-libs/rialto/lib/resource';\n\nexport type BKResourceMapData = Array<[string, BKResourceStatus]>;\n\n// https://github.com/Microsoft/TypeScript/issues/10853#issuecomment-246175061\nexport class BKResourceMap extends Map<string, BKResourceStatus> {\n    static create (array?:any[]): BKResourceMap {\n        var inst: any = new Map(array);\n        inst['__proto__'] = BKResourceMap.prototype;\n        return inst as BKResourceMap;\n    }\n}\n\nexport enum BKResourceStatus {\n    Void = 'void',\n    Loaded = 'loaded',\n    LoadingViaP2p = 'loading_via_p2p',\n    LoadingViaHttp = 'loading_via_http'\n}\n\nexport class BKResource extends Resource {\n\n    lastAccessedAt = 0;\n    swarmId: string;\n    status: BKResourceStatus = BKResourceStatus.Void;\n\n    get id(): string { return this.uri; }\n    get data(): ArrayBuffer { return this.buffer; }\n}\n\n","import { createHash } from 'crypto';\nimport * as Debug from 'debug';\n\nconst SWARM_URN_PREFIX = 'urn:livepeer:beekeeper:bittorrent:swarm-id';\n\nconst debug = Debug('bk:swarm-id');\n\nconst swarmIdCache: {[url: string]: string} = {};\n\nexport function getSwarmIdForVariantPlaylist(manifestUrl: string): string {\n    if (swarmIdCache[manifestUrl]) {\n        //debug(`swarm-ID cache hit: ${swarmIdCache[manifestUrl]}`);\n        return swarmIdCache[manifestUrl];\n    }\n\n    debug(`creating swarm ID for manifest URL: ${manifestUrl}`);\n    const swarmId = SWARM_URN_PREFIX + ':' + createHash('sha1').update(manifestUrl).digest('hex');\n    debug(`created swarm ID: ${swarmId}`);\n    swarmIdCache[manifestUrl] = swarmId;\n    return swarmId;\n}\n","let isSafari11_0 = false;\nlet hasRun = false;\n\nexport function detectSafari11_0() {\n    if (!hasRun) {\n        const userAgent: string = typeof navigator !== 'undefined' ? navigator.userAgent || '' : '';\n        const isSafari = userAgent.indexOf('Safari') != -1 && userAgent.indexOf('Chrome') == -1;\n        if (isSafari) {\n            const match = userAgent.match(/version\\/(\\d+(\\.\\d+)?)/i);\n            const version = (match && match.length > 1 && match[1]) || '';\n            if (version === '11.0') {\n                isSafari11_0 = true;\n            }\n        }\n    }\n    return isSafari11_0;\n}\n","/**\n * Copyright 2018 Novage LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as Debug from 'debug';\n\nimport { BKResource } from './bk-resource';\n\nimport {Queue} from '../../ext-mod/emliri-es-libs/rialto/lib/queue';\nimport {Resource, ResourceEvents} from '../../ext-mod/emliri-es-libs/rialto/lib/resource';\n\nconst debug = Debug('bk:core:http-download-queue');\n\nexport class HttpDownloadQueue {\n\n    private _queue: Queue<BKResource> = new Queue();\n    private _fetching: boolean = false;\n\n    public constructor(\n        private _onLoaded: (res: Resource) => void,\n        private _onError: (res: Resource, err: Resource) => void) {\n    }\n\n    public enqueue(res: BKResource): void {\n        debug('enqueue', res.getUrl());\n\n        if (this._queue.containsAtLeastOnce(res)) {\n            throw new Error('Already enqueued resource object: ' + res.getUrl());\n        }\n\n        this._queue.forEach((resource) => {\n            if (res.uri === resource.uri) { // FIXME: check byterange\n                throw new Error('Found a resource in download queue with same URI');\n            }\n        });\n\n        this._queue.enqueue(res);\n\n        if (!this._fetching) {\n            this._fetchNext();\n        }\n\n        res.on(ResourceEvents.FETCH_PROGRESS, () => {\n            // TODO\n        });\n    }\n\n    public abort(resource: BKResource): void {\n        this._queue.forEach((res: Resource) => {\n            if (res.uri === resource.uri) {\n                res.abort();\n            }\n        });\n    }\n\n    public destroy(): void {\n        // abort all\n        this._queue.forEach((res: Resource) => {\n            res.abort();\n        });\n        this._queue = null;\n    }\n\n    public getQueuedList(): BKResource[] {\n        return this._queue.getArray();\n    }\n\n    private _fetchNext() {\n        const nextResource: Resource = this._queue.pop();\n        if (!nextResource) {\n            this._fetching = false;\n            return;\n        }\n\n        this._fetching = true;\n        nextResource.fetch().then((res: Resource) => {\n            console.log('segment-loaded')\n            //debug('segment-loaded');\n            this._onLoaded(res);\n            this._fetchNext();\n        }).catch((err: any) => {\n            this._onError(nextResource, err);\n        });\n    }\n\n}\n","/**\n * Copyright 2018 Novage LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndeclare var __VERSION__: any;\n\nexport const XMLHttpRequest = require('../../ext-mod/node-http-xhr/lib');\n\nif (global) {\n    (global as any).XMLHttpRequest = XMLHttpRequest;\n}\n\nexport {\n    BKAccessProxy,\n    BKAccessProxyEvents,\n    BKAccessProxySettings,\n    BKOptAccessProxySettings,\n    BK_IProxy,\n    BKAccessProxyEvents as BKProxyEvents\n} from './bk-access-proxy';\n\nexport {BKResource} from './bk-resource';\n\nexport const version =  !global ? __VERSION__ : '';\n\n\n","export type NetworkChannelEmulatorDataCb = (data: ArrayBuffer | Buffer | string) => void;\n\nexport const MIN_WINDOW_TIME_MS = 40;\n\nexport class NetworkChannelEmulatorDataItem {\n    constructor(\n        public data: string | ArrayBuffer | Buffer,\n        public createdAt: number\n    ) {}\n\n    get byteLength(): number {\n        if (typeof this.data === 'string') {\n            return this.data.length;\n        }\n        return this.data.byteLength;\n    }\n}\n\nexport class NetworkChannelEmulator {\n    private _latencyMs: number = 0;\n    private _maxBandwidthBps: number = Infinity;\n    private _queue: NetworkChannelEmulatorDataItem[] = [];\n    private _windowTimeMs: number = MIN_WINDOW_TIME_MS;\n    private _pollInterval: number = null;\n    private _isFrozen: boolean = true;\n    private _lastPolledAt: number = NaN;\n    private _outputRate: number = NaN;\n\n    constructor(private _onData: NetworkChannelEmulatorDataCb) {\n        this.setFrozen(false);\n    }\n\n    setFrozen(frozen, immediateRun: boolean = true) {\n        if (frozen === this._isFrozen) {\n            return;\n        }\n        this._isFrozen = frozen;\n\n        if (this._isFrozen) {\n            window.clearInterval(this._pollInterval);\n            this._pollInterval = null;\n            this._lastPolledAt = NaN;\n        } else {\n            this._pollInterval\n                = window.setInterval(this._onPoll.bind(this), this._windowTimeMs);\n            if (immediateRun) {\n                window.setTimeout(this._onPoll.bind(this), 0);\n            }\n        }\n    }\n\n    push(data: ArrayBuffer | Buffer | string, unfreeze: boolean = true) {\n        const now = window.performance.now();\n        this._queue.push(new NetworkChannelEmulatorDataItem(\n            data,\n            now\n        ));\n        if (unfreeze) {\n            this.setFrozen(false);\n        }\n        if (this._queue.length - 1 === 0) {\n            this._onPoll();\n        }\n    }\n\n    flush(drop: boolean = false) {\n        while(this._queue.length > 0) {\n            const item = this._queue.shift();\n            if (drop) {\n                return;\n            }\n            this._onData(item.data);\n        }\n    }\n\n    get windowTimeMs() { return this._windowTimeMs; }\n    set windowTimeMs(timeMs) { this._windowTimeMs = timeMs; }\n\n    get maxBandwidthBps() { return this._maxBandwidthBps; }\n    set maxBandwidthBps(bwKbps) { this._maxBandwidthBps = bwKbps; }\n\n    get latencyMs() { return this._latencyMs; }\n    set latencyMs(latencyMs) { this._latencyMs = latencyMs; }\n\n    private _getQueuedBandwidth() {\n        if (!this._queue.length) {\n            return 0;\n        }\n\n        const now = window.performance.now();\n        const timeDiffMs = now - this._queue[0].createdAt;\n\n        const bytesTotal = this._queue.reduce((previousValue, currentValue) => {\n            previousValue += currentValue.byteLength;\n            return previousValue;\n        }, 0);\n\n        return 8 * bytesTotal / (timeDiffMs / 1000);\n    }\n\n    private _onPoll() {\n        //console.log('_onPoll');\n\n        const queueBw = this._getQueuedBandwidth();\n        const now = window.performance.now();\n        const queue = this._queue;\n        const latencyMs = this._latencyMs;\n        const maxBandwidthBps = this._maxBandwidthBps;\n\n        let windowTimeEffectiveMs = this._windowTimeMs;\n        this._lastPolledAt = now;\n\n        const maxBytesInWindow = (this._maxBandwidthBps / 8) * (windowTimeEffectiveMs / 1000);\n\n        /*\n        console.log('window ms:', windowTimeEffectiveMs);\n        console.log('max bytes in window:', maxBytesInWindow);\n        console.log('queue bw:', queueBw);\n        */\n\n        let pushedBytes = 0;\n        function shouldPushNext() {\n            if (!queue.length) {\n                return false;\n            }\n            return (maxBytesInWindow >= pushedBytes + queue[0].byteLength\n                && latencyMs <= now - queue[0].createdAt)\n                || queueBw <= maxBandwidthBps;\n        }\n\n        while (shouldPushNext()) {\n\n            const item = this._queue.shift();\n            pushedBytes += item.byteLength;\n\n            // dispatch this so we don't block\n            //setTimeout(() => this._onData(item.data), 0);\n\n            this._onData(item.data);\n        }\n\n        if (queue.length === 0) {\n            this.setFrozen(true);\n        }\n\n        this._outputRate = pushedBytes / (windowTimeEffectiveMs / 1000);\n\n        //console.log('output rate:', this._outputRate);\n    }\n}\n","/**\n * Copyright 2018 Novage LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/// <reference path=\"../../decl/bittorrent.d.ts\" />\n\nconst uuidv4 = require('uuid/v4');\n\nimport * as Debug from 'debug';\n\nimport {Client} from 'bittorrent-tracker';\nimport {createHash} from 'crypto';\n\nimport {StringlyTypedEventEmitter} from './stringly-typed-event-emitter';\nimport {Peer} from './peer';\nimport { BKResource, BKResourceStatus, BKResourceMapData } from './bk-resource';\nimport { PeerTransportFilterFactory, IPeerTransport } from './peer-transport';\nimport { getPerfNow } from './perf-now';\n\nconst PEER_PROTOCOL_VERSION = 1;\n\ndeclare var global: any;\n\n// implement actual IResourceRequest\nclass PeerResourceTransfer {\n\n    readonly createdAt;\n\n    constructor(\n        readonly peerId: string,\n        readonly resource: BKResource,\n    ) {\n        this.createdAt = getPerfNow();\n    }\n}\n\nexport interface ITrackerClient  {\n    on(event: string, callback: (data: any) => void): void;\n    start(): void;\n    stop(): void;\n    destroy(): void;\n}\n\nexport class PeerAgent extends StringlyTypedEventEmitter<\n    \"peer-connected\" | \"peer-closed\" | \"peer-data-updated\" |\n    \"peer-request-received\" | \"peer-response-sent\" |\n    \"resource-fetched\" | \"resource-error\" |\n    \"bytes-downloaded\" | \"bytes-uploaded\"\n    > {\n\n    private _trackerClient: ITrackerClient | null = null;\n    private _peers: Map<string, Peer> = new Map();\n    private _peerCandidates: Map<string, Peer[]> = new Map();\n    private _peerResourceTransfers: Map<string, PeerResourceTransfer> = new Map();\n    private _swarmId: string | null = null;\n    private _peerId: string;\n\n    private debug = Debug('bk:core:peer-agent');\n\n    public constructor(\n            private readonly cachedSegments: Map<string, BKResource>,\n            readonly settings: {\n            trackerAnnounce: string[],\n            p2pSegmentDownloadTimeout: number,\n            webRtcMaxMessageSize: number,\n            mediaPeerTransportFilterFactory: PeerTransportFilterFactory\n            rtcConfig?: RTCConfiguration,\n            }) {\n        super();\n\n\n        //const peerIdSource = (Date.now() + Math.random()).toFixed(12);\n        // FIXED: using a real UUID is better at scale :)\n        const peerIdSource = uuidv4(); // see https://www.npmjs.com/package/uuid\n\n        this._peerId = createHash('sha1').update(peerIdSource).digest('hex');\n\n        this.debug('peer ID', this._peerId);\n    }\n\n    public destroy(): void {\n        this._swarmId = null;\n\n        if (this._trackerClient) {\n            this._trackerClient.stop();\n            this._trackerClient.destroy();\n            this._trackerClient = null;\n        }\n\n        this._peers.forEach((peer) => peer.destroy());\n        this._peers.clear();\n\n        this._peerResourceTransfers.clear();\n\n        this._peerCandidates.forEach((peerCandidateById) => {\n            for (const peerCandidate of peerCandidateById) {\n                peerCandidate.destroy();\n            }\n        });\n        this._peerCandidates.clear();\n    }\n\n    public enqueue(resource: BKResource): boolean {\n\n        if (this.isDownloading(resource)) {\n            console.warn();\n            return false;\n        }\n\n        const entries = this._peers.values();\n        for (let entry = entries.next(); !entry.done; entry = entries.next()) {\n            const peer = entry.value;\n            if ((peer.getDownloadingSegmentId() == null) &&\n                    (peer.getSegmentsMap().get(resource.id) === BKResourceStatus.Loaded)) {\n\n                this._peerResourceTransfers.set(\n                    resource.id,\n                    new PeerResourceTransfer(peer.id, resource)\n                );\n\n                peer.sendSegmentRequest(resource.id);\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    public abort(segment: BKResource): void {\n        const peerSegmentRequest = this._peerResourceTransfers.get(segment.id);\n        if (peerSegmentRequest) {\n            const peer = this._peers.get(peerSegmentRequest.peerId);\n            if (peer) {\n                peer.sendCancelSegmentRequest();\n            }\n            this._peerResourceTransfers.delete(segment.id);\n        }\n    }\n\n    public isDownloading(segment: BKResource): boolean {\n        return this._peerResourceTransfers.has(segment.id);\n    }\n\n    public getActiveDownloadsCount(): number {\n        return this._peerResourceTransfers.size;\n    }\n\n    public sendSegmentsMapToAll(segmentsMap: BKResourceMapData): void {\n\n        this.debug('sending chunk-map to all');\n\n        this._peers.forEach((peer) => peer.sendSegmentsMap(segmentsMap));\n    }\n\n    public sendSegmentsMap(peerId: string, segmentsMap: BKResourceMapData): void {\n        const peer = this._peers.get(peerId);\n        if (peer) {\n            peer.sendSegmentsMap(segmentsMap);\n        }\n    }\n\n    public getOverallSegmentsMap(): Map<string, BKResourceStatus> {\n        const overallSegmentsMap: Map<string, BKResourceStatus> = new Map();\n        this._peers.forEach(peer => peer.getSegmentsMap().forEach((segmentStatus, segmentId) => {\n            if (segmentStatus === BKResourceStatus.Loaded) {\n                overallSegmentsMap.set(segmentId, BKResourceStatus.Loaded);\n            } else if (!overallSegmentsMap.get(segmentId)) {\n                overallSegmentsMap.set(segmentId, BKResourceStatus.LoadingViaHttp);\n            }\n        }));\n\n        return overallSegmentsMap;\n    }\n\n    public getPeerId(): string {\n        return this._peerId;\n    }\n\n    public getSwarmId(): string {\n        return this._swarmId;\n    }\n\n    public setSwarmId(swarmId: string): void {\n        if (this._swarmId === swarmId) {\n            return;\n        }\n\n        this._swarmId = swarmId;\n        this.debug('swarm ID', this._swarmId);\n\n        // Q: check what this hash is really about\n        this._createClient(createHash('sha1').update(PEER_PROTOCOL_VERSION + this._swarmId).digest('hex'));\n    }\n\n    public getPeerConnections(): Peer[] {\n        return Array.from(this._peers.values());\n    }\n\n    private _createClient(infoHash: string): void {\n\n        const clientOptions = {\n            infoHash: infoHash,\n            peerId: this._peerId,\n            announce: this.settings.trackerAnnounce,\n            rtcConfig: this.settings.rtcConfig,\n            port: 19699, // only needed in node\n            wrtc: global ? global.wrtc : null\n        };\n\n        this._trackerClient = new Client(clientOptions);\n        if (!this._trackerClient) {\n            throw new Error('Tracker client instance does not exist');\n        }\n\n        // TODO: Add better handling here\n        this._trackerClient.on('error', this._onTrackerError.bind(this));\n        this._trackerClient.on('warning', this._onTrackerWarning.bind(this));\n        this._trackerClient.on('update', this._onTrackerUpdate.bind(this));\n        this._trackerClient.on('peer', this._onTrackerPeer.bind(this));\n\n        this._trackerClient.start();\n    }\n\n    private _onTrackerError(data: any) {\n        console.error('Tracker-client error:', data);\n\n        throw new Error('Unhandled Beekeepr error');\n    }\n\n    private _onTrackerWarning(data: any) {\n        console.warn('Tracker-client warning:', data);\n    }\n\n    private _onTrackerUpdate(data: any) {\n        this.debug('Tracker-client update data received');\n    }\n\n    private _onTrackerPeer(trackerPeer: IPeerTransport): void {\n        this.debug('Peer added from tracker:', trackerPeer.id, trackerPeer);\n\n        if (this._peers.has(trackerPeer.id)) {\n            this.debug('tracker peer already connected', trackerPeer.id, trackerPeer);\n            trackerPeer.destroy();\n            return;\n        }\n\n        const getTransportWrapper = this.settings.mediaPeerTransportFilterFactory;\n        const mediaPeerTransport: IPeerTransport = getTransportWrapper(trackerPeer);\n        const peer = new Peer(mediaPeerTransport, this.settings);\n\n        peer.on('connect', this._onPeerConnect);\n        peer.on('close', this._onPeerClose);\n        peer.on('data-updated', this._onPeerDataUpdated);\n        peer.on('resource-request', this._onResourceRequest);\n        peer.on('resource-fetched', this._onResourceFetched);\n        peer.on('resource-absent', this._onResourceAbsent);\n        peer.on('resource-error', this._onResourceError);\n        peer.on('resource-timeout', this._onResourceTimeout);\n        peer.on('bytes-downloaded', this._onBytesDownloaded);\n        peer.on('bytes-uploaded', this._onBytesUploaded);\n\n        let peerCandidatesById = this._peerCandidates.get(peer.id);\n        if (!peerCandidatesById) {\n            peerCandidatesById = [];\n            this._peerCandidates.set(peer.id, peerCandidatesById);\n        }\n\n        peerCandidatesById.push(peer);\n    }\n\n    private _onBytesDownloaded = (bytes: number) => {\n        this.emit('bytes-downloaded', bytes);\n    }\n\n    private _onBytesUploaded = (bytes: number) => {\n        this.emit('bytes-uploaded', bytes);\n    }\n\n    private _onPeerConnect = (peer: Peer) => {\n        const connectedPeer = this._peers.get(peer.id);\n\n        if (connectedPeer) {\n            this.debug('tracker peer already connected (in peer connect)', peer.id, peer);\n            peer.destroy();\n            return;\n        }\n\n        // First peer with the ID connected\n        this._peers.set(peer.id, peer);\n\n        // Destroy all other peer candidates\n        const peerCandidatesById = this._peerCandidates.get(peer.id);\n        if (peerCandidatesById) {\n            for (const peerCandidate of peerCandidatesById) {\n                if (peerCandidate != peer) {\n                    peerCandidate.destroy();\n                }\n            }\n\n            this._peerCandidates.delete(peer.id);\n        }\n\n        this.emit('peer-connected', {id: peer.id, remoteAddress: peer.remoteAddress});\n    }\n\n    private _onPeerClose = (peer: Peer) => {\n        if (this._peers.get(peer.id) != peer) {\n            // Try to delete the peer candidate\n\n            const peerCandidatesById = this._peerCandidates.get(peer.id);\n            if (!peerCandidatesById) {\n                return;\n            }\n\n            const index = peerCandidatesById.indexOf(peer);\n            if (index != -1) {\n                peerCandidatesById.splice(index, 1);\n            }\n\n            if (peerCandidatesById.length == 0) {\n                this._peerCandidates.delete(peer.id);\n            }\n\n            return;\n        }\n\n        this._peerResourceTransfers.forEach((value, key) => {\n            if (value.peerId == peer.id) {\n                this._peerResourceTransfers.delete(key);\n            }\n        });\n\n        this._peers.delete(peer.id);\n        this.emit('peer-data-updated');\n        this.emit('peer-closed', peer.id);\n    }\n\n    private _onPeerDataUpdated = () => {\n        this.emit('peer-data-updated');\n    }\n\n    private _onResourceRequest = (peer: Peer, resourceId: string) => {\n        const resource: BKResource = this.cachedSegments.get(resourceId);\n\n        this.emit('peer-request-received', resource, peer);\n\n        if (resource) {\n            // assert: that the resource objects are consistent\n            if (!resource.data || resource.data.byteLength === 0) {\n                throw new Error('No data in segment: ' + resource.id)\n            }\n            peer.sendSegmentData(resourceId, resource.data);\n\n        } else {\n            this.debug('request received for absent resource with id:', resourceId);\n            peer.sendSegmentAbsent(resourceId);\n        }\n\n        this.emit('peer-response-sent', resource, peer);\n    }\n\n    private _onResourceFetched = (peer: Peer, segmentId: string, data: ArrayBuffer) => {\n\n        this.debug(`resource \"${segmentId}\" loaded from peer (id=${peer.id})`);\n\n        const peerResourceRequest = this._peerResourceTransfers.get(segmentId);\n        if (peerResourceRequest) {\n            this._peerResourceTransfers.delete(segmentId);\n\n            const res = peerResourceRequest.resource;\n\n            const responseLatencySeconds = (getPerfNow() - peerResourceRequest.createdAt) / 1000;\n\n            res.setExternalyFetchedBytes(data.byteLength, data.byteLength, responseLatencySeconds);\n            res.setBuffer(data);\n\n            this.emit('resource-fetched', peerResourceRequest.resource, data);\n        }\n    }\n\n    private _onResourceAbsent = (peer: Peer, segmentId: string) => {\n        this._peerResourceTransfers.delete(segmentId);\n        this.emit('peer-data-updated');\n    }\n\n    private _onResourceError = (peer: Peer, segmentId: string, description: string) => {\n        const peerResourceRequest = this._peerResourceTransfers.get(segmentId);\n        if (peerResourceRequest) {\n            this._peerResourceTransfers.delete(segmentId);\n            this.emit('resource-error', peerResourceRequest.resource, description);\n        }\n    }\n\n    private _onResourceTimeout = (peer: Peer, segmentId: string) => {\n        const peerResourceRequest = this._peerResourceTransfers.get(segmentId);\n        if (peerResourceRequest) {\n            this._peerResourceTransfers.delete(segmentId);\n            peer.destroy();\n            if (this._peers.delete(peerResourceRequest.peerId)) {\n                this.emit('peer-data-updated');\n            }\n        }\n    }\n}\n","import { StringlyTypedEventEmitter } from './stringly-typed-event-emitter';\n\nimport {NetworkChannelEmulator} from './network-channel-emulator';\n\nimport * as Debug from 'debug';\nimport { BKResourceMapData } from './bk-resource';\n\nimport { utf8BytesToString } from '../../ext-mod/emliri-es-libs/rialto/lib/bytes-read-write';\n\nconst debug = Debug('bk:core:peer-transport');\n\nexport enum PeerCommandType {\n    SegmentData = 'segment_data',\n    SegmentAbsent = 'segment_absent',\n    SegmentsMap = 'segments_map',\n    SegmentRequest = 'segment_request',\n    CancelSegmentRequest = 'cancel_segment_request',\n}\n\nexport type PeerTransportCommand = {\n    type: PeerCommandType\n    segment_id?: string\n    segment_size?: number\n    segments?: BKResourceMapData\n};\n\n// TODO: marshall parsed data\nexport function decodeMediaPeerTransportCommand(data: ArrayBuffer): PeerTransportCommand | null {\n    const bytes = new Uint8Array(data);\n    // Serialized JSON string check by first, second and last characters: '{\" .... }'\n    //if (bytes[0] == 123 && bytes[1] == 34 && bytes[data.byteLength - 1] == 125) {\n        try {\n            return JSON.parse(utf8BytesToString(bytes));\n            // BROKEN: doesn't work in Node, this does ^\n            //return JSON.parse(new TextDecoder('utf-8').decode(data));\n        } catch {\n            throw new Error('Failed to decode message')\n        }\n    //}\n    return null;\n}\n\nexport interface IPeerTransport {\n    readonly id: string;\n    readonly remoteAddress: string;\n\n    write(buffer: Buffer | string): void;\n\n    on(event: \"connect\" | \"close\", handler: () => void): void;\n    on(event: \"error\", handler: (error: Error) => void): void;\n    on(event: \"data\", handler: (data: ArrayBuffer) => void): void;\n\n    destroy(): void;\n\n    setMaxBandwidthBps(n: number): boolean;\n    setMinLatencyMs(n: number): boolean;\n}\n\nexport type PeerTransportFilterFactory = (transport: IPeerTransport) => IPeerTransport;\n\nexport class DefaultPeerTransportFilter\n    extends StringlyTypedEventEmitter<\"connect\" | \"close\" | \"error\" | \"data\">\n    implements IPeerTransport {\n\n    private _netEmIn: NetworkChannelEmulator\n        = new NetworkChannelEmulator(this._onNetChannelInData.bind(this));\n\n    private _netEmOut: NetworkChannelEmulator\n        = new NetworkChannelEmulator(this._onNetChannelOutData.bind(this));\n\n    constructor(private _transport: IPeerTransport) {\n        super();\n\n        this._transport.on('connect', () => this._onConnect());\n        this._transport.on('close', () => this._onClose());\n        this._transport.on('error', (error) => this._onError(error));\n        this._transport.on('data', (data) => this._onData(data));\n\n    }\n\n    get id(): string {\n        return this._transport.id;\n    }\n\n    get remoteAddress(): string {\n        return this._transport.remoteAddress;\n    }\n\n    write(buffer: string | Buffer): void {\n        if (typeof buffer === 'string') {\n            debug(`writing data to remote peer (id='${this.id}') with string: ${buffer}`);\n        } else {\n            debug(`writing data to remote peer (id='${this.id}') with Buffer object, byte-length is ${buffer.byteLength}`);\n        }\n        this._netEmOut.push(buffer);\n    }\n\n    destroy(): void {\n        this._transport.destroy();\n    }\n\n    setMaxBandwidthBps(n: number): boolean {\n        debug(`setting peer-transport ${this.id} max-bandwidth to ${n} bps`)\n        this._netEmIn.maxBandwidthBps = n;\n        this._netEmOut.maxBandwidthBps = n;\n        return true;\n    }\n\n    setMinLatencyMs(n: number): boolean {\n        this._netEmIn.maxBandwidthBps = n;\n        this._netEmOut.maxBandwidthBps = n;\n        return true;\n    }\n\n    private _onConnect() {\n        debug('connect');\n        this.emit('connect');\n    }\n\n    private _onClose() {\n        debug('close');\n        this.emit('close');\n    }\n\n    private _onError(error: Error) {\n        debug('error');\n        this.emit('error', error);\n    }\n\n    private _onData(data: ArrayBuffer) {\n        debug('input data');\n        this._netEmIn.push(data);\n    }\n\n    private _onNetChannelInData(data: ArrayBuffer) {\n        debug('input netem data');\n        this.emit('data', data);\n    }\n\n    private _onNetChannelOutData(data: Buffer) {\n        this._transport.write(data);\n    }\n}\n","/**\n * Copyright 2018 Novage LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as Debug from 'debug';\n\nimport {StringlyTypedEventEmitter} from './stringly-typed-event-emitter';\nimport { detectSafari11_0 } from './detect-safari-11';\n\nimport { IPeerTransport, PeerCommandType, PeerTransportCommand, decodeMediaPeerTransportCommand } from './peer-transport';\n\nimport { BKResourceMap, BKResourceStatus, BKResourceMapData } from './bk-resource';\n\n// TODO: Make this ResourceRequest\nclass PeerDataTransmission {\n    public bytesDownloaded = 0;\n    public chunks: ArrayBuffer[] = [];\n\n    constructor(readonly id: string, readonly size: number) {}\n}\n\nexport type PeerInfo = {\n    id: string,\n    remoteAddress: string\n};\n\nexport class Peer extends StringlyTypedEventEmitter<\n    // TODO: make proper enum for these events\n    \"connect\" | \"close\" | \"data-updated\" |\n    \"resource-request\" | \"resource-absent\" | \"resource-fetched\" | \"resource-error\" | \"resource-timeout\" |\n    \"bytes-downloaded\" | \"bytes-uploaded\"\n    > {\n\n    private _id: string;\n    private _remoteAddress: string = null;\n\n    private debug = Debug('bk:core:peer');\n\n    private _downloadingSegmentId: string | null = null;\n    private _downloadingSegment: PeerDataTransmission | null = null;\n    private _segmentsMap: BKResourceMap = BKResourceMap.create();\n    private _timer: number | null = null;\n    private _isSafari11_0: boolean = false;\n\n    constructor(\n            private readonly _peerTransport: IPeerTransport,\n            readonly settings: {\n            p2pSegmentDownloadTimeout: number,\n            webRtcMaxMessageSize: number\n            }) {\n        super();\n\n        this._peerTransport.on('connect', () => this._onPeerConnect());\n        this._peerTransport.on('close', () => this._onPeerClose());\n        this._peerTransport.on('error', (error: Error) => this.debug('peer error', this._id, error, this));\n        this._peerTransport.on('data', this._onPeerData.bind(this));\n\n        this._id = _peerTransport.id;\n\n        this._isSafari11_0 = detectSafari11_0();\n    }\n\n    public get id() { return this._id; }\n\n    public get remoteAddress(): string {\n        return this._remoteAddress;\n    }\n\n    public getInfo(): PeerInfo {\n        return {\n            id: this.id,\n            remoteAddress: this.remoteAddress\n        };\n    }\n\n    public destroy(): void {\n        this.debug(`destroying local handle for remote peer (id='${this._id}') -> goodbye mate :)`);\n        this._terminateSegmentRequest();\n        this._peerTransport.destroy();\n    }\n\n    public getDownloadingSegmentId(): string | null {\n        return this._downloadingSegmentId;\n    }\n\n    public getSegmentsMap(): Map<string, BKResourceStatus> {\n        return this._segmentsMap;\n    }\n\n    public sendSegmentsMap(segments: BKResourceMapData): void {\n        this._sendCommand({'type': PeerCommandType.SegmentsMap, 'segments': segments});\n    }\n\n    public sendSegmentData(segmentId: string, data: ArrayBuffer): void {\n        this._sendCommand({\n            type: PeerCommandType.SegmentData,\n            segment_id: segmentId,\n            segment_size: data.byteLength\n        });\n\n        let bytesLeft = data.byteLength;\n        while (bytesLeft > 0) {\n            const bytesToSend\n                = (bytesLeft >= this.settings.webRtcMaxMessageSize\n                    ? this.settings.webRtcMaxMessageSize : bytesLeft);\n\n            const buffer: Buffer = this._isSafari11_0 ?\n                Buffer.from(data.slice(data.byteLength - bytesLeft, data.byteLength - bytesLeft + bytesToSend)) : // workaround for Safari 11.0 bug: https://bugs.webkit.org/show_bug.cgi?id=173052\n                Buffer.from(data, data.byteLength - bytesLeft, bytesToSend); // avoid memory copying\n\n            this._peerTransport.write(buffer);\n            bytesLeft -= bytesToSend;\n        }\n\n        this.emit('bytes-uploaded', data.byteLength);\n    }\n\n    public sendSegmentAbsent(segmentId: string): void {\n        this._sendCommand({type: PeerCommandType.SegmentAbsent, segment_id: segmentId});\n    }\n\n    public sendSegmentRequest(segmentId: string): void {\n        if (this._downloadingSegmentId) {\n            throw new Error('A segment is already downloading: ' + this._downloadingSegmentId);\n        }\n\n        this._sendCommand({type: PeerCommandType.SegmentRequest, segment_id: segmentId});\n        this._downloadingSegmentId = segmentId;\n        this._scheduleResponseTimeout();\n    }\n\n    public sendCancelSegmentRequest(): void {\n        if (this._downloadingSegmentId) {\n            const segmentId = this._downloadingSegmentId;\n            this._terminateSegmentRequest();\n            this._sendCommand({type: PeerCommandType.CancelSegmentRequest, segment_id: segmentId});\n        }\n    }\n\n    public getTransportInterface(): IPeerTransport {\n        return this._peerTransport;\n    }\n\n    private _sendCommand(command: PeerTransportCommand): void {\n        this.debug(`sending command \"${command.type}\" to remote peer (id='${this._id}') `);\n        this._peerTransport.write(JSON.stringify(command));\n    }\n\n    private _scheduleResponseTimeout(): void {\n        this._timer = window.setTimeout(() => {\n            this._timer = null;\n            if (!this._downloadingSegmentId) {\n                return;\n            }\n            const segmentId = this._downloadingSegmentId;\n            this.sendCancelSegmentRequest();\n            this.emit('resource-timeout', this, segmentId); // TODO: send peer not responding event\n        }, this.settings.p2pSegmentDownloadTimeout);\n    }\n\n    private _cancelResponseTimeout(): void {\n        if (this._timer) {\n            clearTimeout(this._timer);\n            this._timer = null;\n        }\n    }\n\n    private _terminateSegmentRequest() {\n        this._downloadingSegmentId = null;\n        this._downloadingSegment = null;\n        this._cancelResponseTimeout();\n    }\n\n    private _handleSegmentChunk(data: ArrayBuffer): void {\n\n        this.debug(`received resource data from remote peer (id='${this._id}')`);\n\n        if (!this._downloadingSegment) {\n            // The segment was not requested or canceled\n            this.debug(`received data from remote peer (id='${this._id}') for non-requested or canceled segment :(`);\n            //return;\n\n            console.log(data);\n\n            throw new Error('Runtime self-check failed: unexpected data received from peer')\n        }\n\n        this._downloadingSegment.bytesDownloaded += data.byteLength;\n        this._downloadingSegment.chunks.push(data);\n        this.emit('bytes-downloaded', data.byteLength);\n\n        const segmentId = this._downloadingSegment.id;\n\n        if (this._downloadingSegment.bytesDownloaded == this._downloadingSegment.size) {\n            const segmentData = new Uint8Array(this._downloadingSegment.size);\n            let offset = 0;\n            for (const chunk of this._downloadingSegment.chunks) {\n                segmentData.set(new Uint8Array(chunk), offset);\n                offset += chunk.byteLength;\n            }\n\n            this.debug('peer resource transfer done', this._id, segmentId, this);\n            this._terminateSegmentRequest();\n            this.emit('resource-fetched', this, segmentId, segmentData.buffer);\n        } else if (this._downloadingSegment.bytesDownloaded > this._downloadingSegment.size) {\n            this.debug(`remote peer (id='${this._id}'): transferred resource bytes mismatch!!!`, segmentId);\n\n            console.error('There was a fatal peer transaction error :(');\n\n            this._terminateSegmentRequest();\n            this.emit('resource-error', this, segmentId, 'Too many bytes received for segment');\n        }\n    }\n\n    private _onPeerData(data: ArrayBuffer): void {\n\n        ///*\n        if (data instanceof Buffer) {\n            data = data.buffer;\n        }\n        //*/\n\n        if (!(data instanceof ArrayBuffer)) {\n            console.log(data)\n            throw new Error('Assertion failed: data not an ArrayBuffer');\n        }\n\n        const command = decodeMediaPeerTransportCommand(data);\n        if (!command) {\n            this._handleSegmentChunk(data);\n            return;\n        }\n\n        if (this._downloadingSegment) {\n            this.debug('peer segment download is interrupted by a command', this._id, this);\n\n            const segmentId = this._downloadingSegment.id;\n            this._terminateSegmentRequest();\n            this.emit('resource-error', this, segmentId, 'Segment download is interrupted by a command');\n            return;\n        }\n\n        this.debug('peer receive command', this._id, command, this);\n\n        switch (command.type) {\n        case PeerCommandType.SegmentsMap:\n            if (!command.segments) {\n                throw new Error('No `segments` found in data');\n            }\n            this._segmentsMap = BKResourceMap.create(command.segments);\n            this.emit('data-updated');\n            break;\n\n        case PeerCommandType.SegmentRequest:\n            this.emit('resource-request', this, command.segment_id);\n            break;\n\n        case PeerCommandType.SegmentData:\n            if (this._downloadingSegmentId === command.segment_id) {\n                if (!command.segment_size) {\n                    throw new Error('No `segment_size` found in data');\n                }\n                this._downloadingSegment = new PeerDataTransmission(command.segment_id, command.segment_size);\n                this._cancelResponseTimeout();\n            }\n            break;\n\n        case PeerCommandType.SegmentAbsent:\n            if (this._downloadingSegmentId === command.segment_id) {\n                this._terminateSegmentRequest();\n                this._segmentsMap.delete(command.segment_id);\n                this.emit('resource-absent', this, command.segment_id);\n            }\n            break;\n\n        case PeerCommandType.CancelSegmentRequest:\n            // TODO: peer stop sending buffer\n            break;\n\n        default:\n            break;\n        }\n    }\n\n    private _onPeerConnect(): void {\n        this.debug(`remote peer (id='${this._id}') connection open`);\n        this._remoteAddress = this._peerTransport.remoteAddress;\n        this.emit('connect', this);\n    }\n\n    private _onPeerClose(): void {\n        this.debug(`remote peer (id='${this._id}') connection closed`);\n        this._terminateSegmentRequest();\n        this.emit('close', this);\n    }\n}\n","let performance;\nif (!global) {\n    performance = window.performance;\n}\n\nexport function getPerfNow(): number {\n    if (!performance) {\n        return Date.now();\n    }\n    return performance.now();\n}\n","/**\n * Copyright 2018 Novage LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {EventEmitter} from 'eventemitter3';\n\nexport class StringlyTypedEventEmitter<T extends string> extends EventEmitter {\n    public on(event: T, listener: (...args: any[]) => void) { return super.on(event, listener); }\n    public emit(event: T, ...args: any[]) { return super.emit(event, ...args); }\n}\n","import {\n    BK_IProxy,\n    BKAccessProxy,\n    BKOptAccessProxySettings,\n} from '../core';\n\nimport { HlsAccessProxy } from './hls-access-proxy';\n\nimport * as Debug from 'debug';\nimport { VirtualPlayhead } from './virtual-playhead';\nimport { BKResourceTransferMonitorDomView } from '../core/bk-resource-tx-monitor';\nimport { getSwarmIdForVariantPlaylist } from '../core/bk-swarm-id';\n\nconst debug = Debug('bk:engine:universal:engine');\n\nexport class Engine {\n\n    public static isSupported(): boolean {\n        return BKAccessProxy.isSupported();\n    }\n\n    private _proxy: BK_IProxy;\n    private _sourceUrl: string | null = null;\n    private _hlsProxy: HlsAccessProxy;\n    private _playhead: VirtualPlayhead;\n    private _gotEarliestRequestedRangeBuffered: boolean = false;\n    private _monitorDomView: BKResourceTransferMonitorDomView = null;\n\n    public constructor(settings: BKOptAccessProxySettings = {}) {\n        //super();\n\n        debug('created universal adaptive media p2p engine', settings);\n\n        /**\n         * Access proxy for HTTP resources\n         */\n        this._proxy = new BKAccessProxy(settings);\n\n        /**\n         * Accces proxy for HLS media (uses HTTP proxy)\n         */\n        this._hlsProxy = new HlsAccessProxy(this._proxy);\n\n        this._hlsProxy.on('buffered-range-change', () => {\n            this._playhead.setBufferedRanges(this._hlsProxy.getBufferedRanges());\n\n            if (!this._gotEarliestRequestedRangeBuffered) {\n\n                const earliestRangeRequested = this._hlsProxy.getRequestedRanges().getEarliestRange();\n                const earliestRangeBuffered = this._hlsProxy.getBufferedRanges().getEarliestRange();\n\n                if (earliestRangeRequested && earliestRangeBuffered) {\n                    if (earliestRangeBuffered.start === earliestRangeRequested.start) {\n                        this._gotEarliestRequestedRangeBuffered = true;\n                        this._playhead.setCurrentTime(earliestRangeBuffered.start);\n                    }\n                }\n            }\n        });\n\n        /**\n         * VirtualPlayhead clock control\n         */\n        this._playhead = new VirtualPlayhead(() => {\n\n            // TODO: add to monitor\n            //console.log('media-engine virtual clock time:', playhead.getCurrentTime())\n\n            this._hlsProxy.updateFetchTargetRange(this._playhead.getCurrentTime());\n        });\n\n        /**\n         * Monitoring view\n         */\n        this._monitorDomView = window && window.document ?\n            new BKResourceTransferMonitorDomView(this.getProxy(), 'root') : null;\n    }\n\n    public getProxy(): BK_IProxy{\n        return this._proxy;\n    }\n\n    public getPlayhead(): VirtualPlayhead {\n        return this._playhead;\n    }\n\n    public getPeerId(): string {\n        return this._proxy.getPeerId();\n    }\n\n    public getSwarmId(): string {\n        return this._proxy.getSwarmId();\n    }\n\n    public destroy() {\n        this._proxy.terminate();\n    }\n\n    public setSource(url: string) {\n        if (this._sourceUrl) {\n            throw new Error('Source URL already set');\n        }\n\n        this._sourceUrl = url;\n\n        debug('set source', url);\n\n        // FIXME: this is a hack, should only be used if running directly on a media-variant playlist (not master)\n        this._proxy.setSwarmId(getSwarmIdForVariantPlaylist(url));\n    }\n\n    public start() {\n        if (!this._sourceUrl) {\n            throw new Error('No source URL set');\n        }\n\n        this._hlsProxy.setSource(this._sourceUrl);\n    }\n\n    public setMaxLiveDelaySeconds(maxLiveDelaySeconds: number) {\n        this._hlsProxy.liveDelaySeconds = maxLiveDelaySeconds;\n    }\n\n    public setMaxPlayheadLookaheadSeconds(maxPlayheadLookaheadSeconds: number) {\n        this._hlsProxy.playheadLookaheadSeconds = maxPlayheadLookaheadSeconds;\n    }\n\n    public setNetemPeerMaxKbps(kbpsMaxBw: number) {\n        this._proxy.getPeerConnections().forEach((peer) => {\n            peer.getTransportInterface().setMaxBandwidthBps(1000 * kbpsMaxBw);\n        })\n    }\n\n}\n","import * as Debug from 'debug';\n\nimport { HlsM3u8File } from '../../ext-mod/emliri-es-libs/rialto/lib/hls-m3u8';\nimport { ResourceRequestMaker, IResourceRequest, ResourceRequestOptions } from '../../ext-mod/emliri-es-libs/rialto/lib/resource-request';\nimport { AdaptiveMediaStreamConsumer } from '../../ext-mod/emliri-es-libs/rialto/lib/adaptive-media-client';\nimport { AdaptiveMedia, AdaptiveMediaPeriod } from '../../ext-mod/emliri-es-libs/rialto/lib/adaptive-media';\nimport { MediaSegment } from '../../ext-mod/emliri-es-libs/rialto';\nimport { TimeInterval, TimeIntervalContainer } from '../../ext-mod/emliri-es-libs/rialto/lib/time-intervals';\n\nimport { BK_IProxy } from '../core';\nimport { BKResourceRequest } from '../core/bk-resource-request'; // TODO: move to core\nimport { getSwarmIdForVariantPlaylist } from '../core/bk-swarm-id';\nimport { StringlyTypedEventEmitter } from '../core/stringly-typed-event-emitter';\n\nconst debug = Debug('bk:engine:universal:hls-access-proxy');\n\nconst DEFAULT_PLAYHEAD_LOOK_AHEAD = 30;\nconst DEFAULT_LIVE_DELAY = 30;\n\nexport class HlsAccessProxy extends StringlyTypedEventEmitter<'buffered-range-change'> {\n\n    liveDelaySeconds: number = DEFAULT_LIVE_DELAY;\n    playheadLookaheadSeconds = DEFAULT_PLAYHEAD_LOOK_AHEAD;\n\n    private _bkProxy: BK_IProxy;\n    private _mediaStreamConsumer: AdaptiveMediaStreamConsumer = null;\n\n    constructor(proxy: BK_IProxy) {\n        super();\n\n        debug('created HLS access-proxy');\n\n        this._bkProxy = proxy;\n    }\n\n    setSource(url: string): void {\n\n        debug(`processing playlist (parsing) for url: ${url}`);\n\n        this._processM3u8File(url);\n    }\n\n    updateFetchTargetRange(playheadPositionSeconds: number) {\n        if (!this._mediaStreamConsumer) {\n            return;\n        }\n\n        if (this._mediaStreamConsumer.getMedia().isLive) {\n            this._mediaStreamConsumer.setFetchFloorCeiling(-1 * this.liveDelaySeconds);\n        } else {\n            this._mediaStreamConsumer.setFetchFloorCeiling(0,\n                playheadPositionSeconds + this.playheadLookaheadSeconds);\n        }\n    }\n\n    getBufferedRanges(): TimeIntervalContainer {\n        if (!this._mediaStreamConsumer) {\n            return new TimeIntervalContainer();\n        }\n\n        return this._mediaStreamConsumer.getBufferedRanges();\n    }\n\n    getRequestedRanges(): TimeIntervalContainer {\n        return this._mediaStreamConsumer.getFetchTargetRanges();\n    }\n\n    isLiveSource(): boolean {\n        return this._mediaStreamConsumer.getMedia().isLive;\n    }\n\n    private _createResourceRequestMaker(swarmId: string): ResourceRequestMaker {\n        //debug(`new ResourceRequestMaker for ${swarmId}`);\n        return ((url: string, requestOpts: ResourceRequestOptions) =>\n            this._createResourceRequest(swarmId, url, requestOpts));\n    }\n\n    private _createResourceRequest(swarmId: string, url: string, requestOpts: ResourceRequestOptions): IResourceRequest {\n        return new BKResourceRequest(this._bkProxy, swarmId, url, requestOpts);\n    }\n\n    private _processM3u8File(url: string) {\n        const m3u8 = new HlsM3u8File(url);\n\n        m3u8.fetch().then(() => {\n            m3u8.parse().then((adaptiveMediaPeriods: AdaptiveMediaPeriod[]) => {\n                this._onAdaptiveMediaPeriodsParsed(url, adaptiveMediaPeriods);\n            });\n        });\n    }\n\n    private _onAdaptiveMediaPeriodsParsed(url: string, adaptiveMediaPeriods: AdaptiveMediaPeriod[]) {\n        // may get the first media of the first set in this period\n        const media: AdaptiveMedia = adaptiveMediaPeriods[0].getDefaultSet().getDefaultMedia();\n\n        media.refresh(media.isLive, () => { // called everytime we auto-refresh\n\n            debug('setting request-makers on new segments', media.segments.length)\n\n            media.segments.forEach((segment: MediaSegment) => {\n                if (segment.hasCustomRequestMaker()) {\n                    return;\n                }\n                debug('setting request-maker for:', segment.getUrl())\n                const swarmId = getSwarmIdForVariantPlaylist(url);\n                segment.setRequestMaker(this._createResourceRequestMaker(swarmId));\n            });\n\n        }).then((media: AdaptiveMedia) => { // called on first initial refresh\n\n            this._mediaStreamConsumer\n                = new AdaptiveMediaStreamConsumer(media, (segment: MediaSegment) => {\n                    this._onSegmentBuffered(segment);\n                });\n\n        }).catch((err) => {\n            debug('no adaptive media refresh:', err);\n        });\n    }\n\n    private _onSegmentBuffered(segment: MediaSegment) {\n        debug('segment buffered:', segment.getUrl());\n\n        this.emit('buffered-range-change', this.getBufferedRanges());\n    }\n}\n\n","export {Engine} from './engine';\nexport {BKAccessProxy, BKAccessProxySettings, BKAccessProxyEvents, BK_IProxy, BKResource} from '../core';\n","import { StringlyTypedEventEmitter } from '../core/stringly-typed-event-emitter';\nimport { TimeIntervalContainer } from '../../ext-mod/emliri-es-libs/rialto/lib/time-intervals';\nimport { TimeScale } from '../../ext-mod/emliri-es-libs/rialto/lib/time-scale';\n\nimport * as Debug from 'debug';\n\nconst debug = Debug('bk:engine:universal:virtual-playhead');\n\nconst perf = window.performance;\n\nexport const UPDATE_PERIOD_MS = 500;\n\nexport type VirtualPlayheadUpdateCb = (playhead: VirtualPlayhead) => void;\n\nexport class VirtualPlayhead extends StringlyTypedEventEmitter<'update'> {\n\n    private _clockTime: number = 0;\n    private _updateIntervalTimer: number = null;\n    private _isPlaying: boolean = false;\n    private _updateCalledAt: number = null;\n    private _isSpinning: boolean = false;\n    private _bufferedTimeRanges: TimeIntervalContainer = new TimeIntervalContainer();\n    private _timeScale: TimeScale = new TimeScale(1/1000)\n\n    constructor(\n        private _onUpdate: VirtualPlayheadUpdateCb = null\n    ) {\n        super();\n    }\n\n    play() {\n        if (this._isPlaying) {\n            return;\n        }\n        this._isPlaying = true;\n        this._onUpdateTimer();\n        this._updateIntervalTimer = window.setInterval(() => this._onUpdateTimer(), UPDATE_PERIOD_MS);\n    }\n\n    pause() {\n        if (!this._isPlaying) {\n            return;\n        }\n        this._isPlaying = false;\n        this._updateCalledAt = null;\n        window.clearInterval(this._updateIntervalTimer);\n        this._updateIntervalTimer = null;\n\n        this._onUpdateTimer();\n    }\n\n    /**\n     *\n     * @param time clock time in seconds\n     */\n    setCurrentTime(time: number) {\n        this._clockTime = this._timeScale.denormalize(time);\n    }\n\n    /**\n     * @returns clock time in seconds\n     */\n    getCurrentTime(): number {\n        return this._timeScale.normalize(this._clockTime);\n    }\n\n    /**\n     * Should be understood as `isPlaying()´, indicating the intention of spinning\n     * while it can be pushed, while not spinning because data is lacking.\n     */\n    isPushed(): boolean {\n        return this._isPlaying;\n    }\n\n    /**\n     * Whether the tape is moving\n     */\n    isSpinning() {\n        return this._isSpinning;\n    }\n\n    getBufferedRanges(): TimeIntervalContainer {\n        return this._bufferedTimeRanges;\n    }\n\n    setBufferedRanges(ranges: TimeIntervalContainer) {\n\n        debug('update buffered time-ranges');\n\n        this._bufferedTimeRanges = ranges;\n\n        if (!this._isSpinning) {\n            this._onUpdateTimer();\n        }\n\n    }\n\n    private _onUpdateTimer() {\n        const lastCalledAt = this._updateCalledAt;\n        this._updateCalledAt = perf.now();\n\n        if (!this._isPlaying) {\n            this._isSpinning = false;\n            return;\n        }\n\n        if (lastCalledAt !== null && this._isSpinning) {\n            this._clockTime += (this._updateCalledAt - lastCalledAt);\n        }\n\n        if (!this._isSpinning) {\n            this._updateCalledAt = null;\n        }\n\n        this._isSpinning\n            = this._bufferedTimeRanges.hasIntervalsWith(this.getCurrentTime());\n\n        if (this._onUpdate) {\n            this._onUpdate(this);\n        }\n\n        this.emit('update');\n    }\n}\n","module.exports = require(\"bittorrent-tracker\");","module.exports = require(\"crypto\");","module.exports = require(\"debug\");","module.exports = require(\"domify\");","module.exports = require(\"es6-set/polyfill\");","module.exports = require(\"eventemitter3\");","module.exports = require(\"events\");","module.exports = require(\"get-browser-rtc\");","module.exports = require(\"html-tag\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"m3u8-parser\");","module.exports = require(\"simple-peer\");","module.exports = require(\"url\");","module.exports = require(\"url-toolkit\");","module.exports = require(\"uuid/v4\");"],"sourceRoot":""}